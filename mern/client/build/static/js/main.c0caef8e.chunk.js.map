{"version":3,"sources":["actions/productActions.js","actions/userActions.js","constants/userConstants.js","components/AdminRoute.js","components/Chatbox.js","components/LoadingBox.js","components/MessageBox.js","components/PrivateRoute.js","components/SearchBox.js","components/SellerRoute.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","screens/DashboardScreen.js","actions/orderActions.js","constants/orderConstants.js","components/Rating.js","components/Product.js","screens/HomeScreen.js","screens/MapScreen.js","screens/OrderHistoryScreen.js","screens/OrderListScreen.js","screens/OrderScreen.js","components/CheckoutSteps.js","screens/PaymentMethodScreen.js","screens/PlaceOrderScreen.js","screens/ProductEditScreen.js","screens/ProductListScreen.js","screens/ProductScreen.js","screens/ProfileScreen.js","screens/RegisterScreen.js","utils.js","screens/SearchScreen.js","screens/SellerScreen.js","screens/ShippingAddressScreen.js","screens/SigninScreen.js","screens/SupportScreen.js","screens/UserEditScreen.js","screens/UserListScreen.js","App.js","serviceWorker.js","reducers/productReducers.js","store.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js","constants/productConstants.js"],"names":["listProducts","pageNumber","seller","name","category","order","min","max","rating","dispatch","a","type","PRODUCT_LIST_REQUEST","Axios","get","data","PRODUCT_LIST_SUCCESS","payload","PRODUCT_LIST_FAIL","message","detailsProduct","productId","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","response","detailsUser","userId","getState","userInfo","userSignin","headers","Authorization","token","AdminRoute","Component","component","rest","useSelector","state","render","props","isAdmin","to","ENDPOINT","window","location","host","indexOf","ChatBox","useState","socket","setSocket","uiMessagesRef","useRef","isOpen","setIsOpen","messageBody","setMessageBody","body","messages","setMessages","useEffect","current","scrollBy","top","clientHeight","left","behavior","emit","_id","on","className","onClick","ref","map","msg","index","key","onSubmit","e","preventDefault","trim","setTimeout","alert","value","onChange","target","placeholder","console","log","sk","socketIOClient","LoadingBox","MessageBox","variant","children","PrivateRoute","SearchBox","setName","history","push","id","SellerRoute","isSeller","addToCart","qty","cartItems","cart","length","image","price","countInStock","product","localStorage","setItem","JSON","stringify","saveShippingAddress","CartScreen","match","params","search","Number","split","error","useDispatch","dispatchEvent","removeFromCartHandler","removeFromCart","item","src","alt","Array","keys","x","reduce","c","disabled","DashboardScreen","orderSummary","loading","summary","users","numUsers","orders","numOrders","totalSales","toFixed","dailyOrders","width","height","chartType","loader","sales","productCategories","count","Rating","numReviews","Product","HomeScreen","productList","products","userTopSellersList","loadingSellers","errorSellers","sellers","showArrows","autoPlay","showThumbs","logo","libs","defaultLocation","lat","lng","MapScreen","googleApiKey","setGoogleApiKey","center","setCenter","setLocation","mapRef","placeRef","markerRef","getUserCurrentLocation","fetch","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","libraries","googleMapsApiKey","mapContainerStyle","zoom","onLoad","onIdle","place","onPlacesChanged","getPlaces","geometry","places","address","formatted_address","vicinity","googleAddressId","marker","OrderHistoryScreen","orderMineList","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","OrderListScreen","sellerMode","path","orderList","orderDelete","loadingDelete","errorDelete","successDelete","success","listOrders","deleteHandler","orderId","confirm","delete","user","OrderScreen","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","errorPay","successPay","orderDeliver","loadingDeliver","errorDeliver","successDeliver","addPayPalScript","script","document","createElement","async","onload","appendChild","detailsOrder","paypal","shippingAddress","fullName","city","postalcode","country","paymentMethod","orderItems","itemsPrice","shippingPrice","taxPrice","amount","onSuccess","paymentResult","put","payOrder","deliverOrder","CheckoutSteps","step1","step2","step3","step4","PaymentMethodScreen","setpaymentMethod","required","checked","htmlFor","PlaceOrderScreen","orderCreate","toPrice","num","post","removeItem","createOrder","ProductEditScreen","setPrice","setImage","setCategory","setCountInStock","brand","setBrand","description","setDescription","productDetails","productUpdate","loadingUpdate","errorUpdate","successUpdate","PRODUCT_UPDATE_RESET","loadingUpload","setloadingUpload","errorUpload","setErrorUpload","uploadFileHandler","file","files","bodyFormData","FormData","append","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","updateProduct","label","rows","ProductListScreen","useParams","page","pages","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","productDelete","PRODUCT_CREATE_RESET","PRODUCT_DELETE_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","ProductScreen","setQty","productReviewCreate","loadingReviewCreate","errorReviewCreate","successReviewCreate","setRating","comment","setComment","PRODUCT_REVIEW_CREATE_RESET","reviews","review","caption","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","PRODUCT_REVIEW_CREATE_FAIL","createReview","ProfileScreen","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","sellerName","setSellerName","sellerLogo","setSellerLogo","sellerDescription","setSellerDescription","userDetails","userUpdateProfile","updateUserProfile","RegisterScreen","confirmpassword","redirect","userRegister","register","prices","ratings","SearchScreen","productCategoryList","loadingCategories","errorCategories","categories","getFilterUrl","filter","filterPage","filterCategory","filterName","filterRating","sortOrder","filterMin","filterMax","p","r","SellerScreen","sellerId","loadingProducts","errorProducts","href","ShippingAddressScreen","setLat","setLng","addressMap","userAddressMap","setFullName","setAddress","setCity","postalCode","setPostalCode","setCountry","newLat","newLng","moveOn","SigninScreen","signin","allUsers","allMessages","allSelectedUser","SupportScreen","selectedUser","setSelectedUser","setUsers","existUser","find","unread","updatedUser","updatedUsers","selectUser","online","UserEditScreen","setIsSeller","setIsAdmin","userUpdate","updateUser","UserListScreen","userList","userDelete","App","sidebarIsOpen","setSidebarIsOpen","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_FAIL","exact","Boolean","hostname","require","initialState","getItem","parse","reducer","combineReducers","action","existItem","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c0caef8e.chunk.js","sourcesContent":["import Axios from 'axios';\nimport {\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_CATEGORY_LIST_SUCCESS,\n    PRODUCT_CATEGORY_LIST_REQUEST,\n    PRODUCT_CATEGORY_LIST_FAIL,\n    PRODUCT_REVIEW_CREATE_REQUEST,\n    PRODUCT_REVIEW_CREATE_SUCCESS,\n    PRODUCT_REVIEW_CREATE_FAIL,\n} from '../constants/productConstants';\n\nexport const listProducts = ({\n    pageNumber = '',\n    seller = '',\n    name = '',\n    category = '',\n    order = '',\n    min = 0,\n    max = 0,\n    rating = 0,\n}) => async (dispatch) => {\n    dispatch({\n        type: PRODUCT_LIST_REQUEST,\n    });\n    try {\n        const { data } = await Axios.get(\n            `/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`\n        );\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n};\n\nexport const listProductCategories = () => async (dispatch) => {\n    dispatch({\n        type: PRODUCT_CATEGORY_LIST_REQUEST,\n    });\n    try {\n        const { data } = await Axios.get(`/api/products/categories`);\n        dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\n    }\n};\n\nexport const detailsProduct = (productId) => async (dispatch) => {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n    try {\n        const { data } = await Axios.get(`/api/products/${productId}`);\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.post(\n            '/api/products',\n            {},\n            {\n                headers: { Authorization: `Bearer ${userInfo.token}` },\n            }\n        );\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data.product,\n        });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\n    }\n};\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.put(`/api/products/${product._id}`, product, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\n    }\n};\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        await Axios.delete(`/api/products/${productId}`, {\n\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n\n        });\n        dispatch({ type: PRODUCT_DELETE_SUCCESS });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\n    }\n};\n\nexport const createReview = (productId, review) => async (\n    dispatch,\n    getState\n) => {\n    dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.post(\n            `/api/products/${productId}/reviews`,\n            review,\n            {\n                headers: { Authorization: `Bearer ${userInfo.token}` },\n            }\n        );\n        dispatch({\n            type: PRODUCT_REVIEW_CREATE_SUCCESS,\n            payload: data.review,\n        });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\n    }\n};","import Axios from \"axios\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_SUCCESS, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_SUCCESS, USER_DELETE_REQUEST, USER_DELETE_FAIL, USER_TOPSELLERS_LIST_REQUEST, USER_TOPSELLERS_LIST_SUCCESS, USER_TOPSELLERS_LIST_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\"\n\nexport const register = (name, email, password) => async (dispatch) => {\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n    try {\n        const { data } = await Axios.post('/api/users/register', { name, email, password });\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\nexport const signin = (email, password) => async (dispatch) => {\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n    try {\n        const { data } = await Axios.post('/api/users/signin', { email, password });\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_SIGNIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const signout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('shippingAddress');\n    dispatch({ type: USER_SIGNOUT })\n}\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n    const { userSignin: { userInfo } } = getState();\n    try {\n        const { data } = await Axios.get(`/api/users/${userId}`, {\n            headers: { Authorization: `Bearer ${userInfo?.token}` },\n\n        });\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({ type: USER_DETAILS_FAIL, payload: message })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n    const { userSignin: { userInfo }, } = getState();\n    try {\n        const { data } = await Axios.put(`/api/users/profile`, user, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    dispatch({ type: USER_LIST_REQUEST });\n    try {\n        const {\n            userSignin: { userInfo },\n        } = getState();\n        const { data } = await Axios.get('/api/users', {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        });\n        dispatch({ type: USER_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: USER_LIST_FAIL, payload: message });\n    }\n};\n\nexport const deleteUser = (userId) => async (dispatch, getState) => {\n    dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.delete(`/api/users/${userId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: USER_DELETE_FAIL, payload: message });\n    }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.put(`/api/users/${user._id}`, user, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: USER_UPDATE_FAIL, payload: message });\n    }\n};\n\nexport const listTopSellers = () => async (dispatch) => {\n    dispatch({ type: USER_TOPSELLERS_LIST_REQUEST });\n    try {\n        const { data } = await Axios.get('/api/users/top-sellers');\n        dispatch({ type: USER_TOPSELLERS_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: USER_TOPSELLERS_LIST_FAIL, payload: message });\n    }\n};\n","export const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\nexport const USER_SIGNIN_REQUEST = 'USER_SIGNIN_REQUEST';\nexport const USER_SIGNIN_SUCCESS = 'USER_SIGNIN_SUCCESS';\nexport const USER_SIGNIN_FAIL = 'USER_SIGNIN_FAIL';\n\nexport const USER_SIGNOUT = 'USER_SIGNOUT';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\n\nexport const USER_TOPSELLERS_LIST_REQUEST = 'USER_TOPSELLERS_LIST_REQUEST';\nexport const USER_TOPSELLERS_LIST_SUCCESS = 'USER_TOPSELLERS_LIST_SUCCESS';\nexport const USER_TOPSELLERS_LIST_FAIL = 'USER_TOPSELLERS_LIST_FAIL';\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\nexport const USER_DELETE_RESET = 'USER_DELETE_RESET';\n\nexport const USER_ADDRESS_MAP_CONFIRM = 'USER_ADDRESS_MAP_CONFIRM';","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport default function AdminRoute({ component: Component, ...rest }) {\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                userInfo && userInfo.isAdmin ? (\n                    <Component {...props}></Component>\n                ) : (\n                        <Redirect to=\"/signin\" />\n                    )\n            }\n        ></Route>\n    );\n}","\nimport React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst ENDPOINT =\n    window.location.host.indexOf('localhost') >= 0\n        ? 'http://127.0.0.1:5000'\n        : window.location.host;\n\nexport default function ChatBox(props) {\n    const { userInfo } = props;\n    const [socket, setSocket] = useState(null);\n    const uiMessagesRef = useRef(null);\n    const [isOpen, setIsOpen] = useState(false);\n    const [messageBody, setMessageBody] = useState('');\n    const [messages, setMessages] = useState([\n        { name: 'Admin', body: 'Hello there, Please ask your question.' },\n    ]);\n\n    useEffect(() => {\n        if (uiMessagesRef.current) {\n            uiMessagesRef.current.scrollBy({\n                top: uiMessagesRef.current.clientHeight,\n                left: 0,\n                behavior: 'smooth',\n            });\n        }\n        if (socket) {\n            socket.emit('onLogin', {\n                _id: userInfo._id,\n                name: userInfo.name,\n                isAdmin: userInfo.isAdmin,\n            });\n            socket.on('message', (data) => {\n                setMessages([...messages, { body: data.body, name: data.name }]);\n            });\n        }\n    }, [messages, isOpen, socket,userInfo._id, userInfo.isAdmin, userInfo.name]);\n\n    const supportHandler = () => {\n        setIsOpen(true);\n        console.log(ENDPOINT);\n        const sk = socketIOClient(ENDPOINT);\n        setSocket(sk);\n    };\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (!messageBody.trim()) {\n            alert('Error. Please type message.');\n        } else {\n            setMessages([...messages, { body: messageBody, name: userInfo.name }]);\n            setMessageBody('');\n            setTimeout(() => {\n                socket.emit('onMessage', {\n                    body: messageBody,\n                    name: userInfo.name,\n                    isAdmin: userInfo.isAdmin,\n                    _id: userInfo._id,\n                });\n            }, 1000);\n        }\n    };\n    const closeHandler = () => {\n        setIsOpen(false);\n    };\n    return (\n        <div className=\"chatbox\">\n            {!isOpen ? (\n                <button type=\"button\" onClick={supportHandler}>\n                    <i className=\"fa fa-support\" />\n                </button>\n            ) : (\n                    <div className=\"card card-body\">\n                        <div className=\"row\">\n                            <strong>Support </strong>\n                            <button type=\"button\" onClick={closeHandler}>\n                                <i className=\"fa fa-close\" />\n                            </button>\n                        </div>\n                        <ul ref={uiMessagesRef}>\n                            {messages.map((msg, index) => (\n                                <li key={index}>\n                                    <strong>{`${msg.name}: `}</strong> {msg.body}\n                                </li>\n                            ))}\n                        </ul>\n                        <div>\n                            <form onSubmit={submitHandler} className=\"row\">\n                                <input\n                                    value={messageBody}\n                                    onChange={(e) => setMessageBody(e.target.value)}\n                                    type=\"text\"\n                                    placeholder=\"type message\"\n                                />\n                                <button type=\"submit\">Send</button>\n                            </form>\n                        </div>\n                    </div>\n                )}\n        </div>\n    );\n}","import React from 'react'\n\nfunction LoadingBox() {\n    return (\n        <div className=\"loading\">\n            <i className=\"fa fa-spinner fa-spin\">Loading...</i>\n        </div>\n    )\n}\n\nexport default LoadingBox\n","import React from 'react'\n\nfunction MessageBox(props) {\n    return (\n        <div className={`alert alert-${props.variant || 'info'}`}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default MessageBox\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                userInfo ? (\n                    <Component {...props}></Component>\n                ) : (\n                        <Redirect to=\"/signin\" />\n                    )\n            }\n        ></Route>\n    );\n}\n\nexport default PrivateRoute","import React, { useState } from 'react';\n\nexport default function SearchBox(props) {\n    const [name, setName] = useState('');\n    const submitHandler = (e) => {\n        e.preventDefault();\n        props.history.push(`/search/name/${name}`);\n    };\n    return (\n        <form className=\"search\" onSubmit={submitHandler}>\n            <div className=\"row\">\n                <input\n                    type=\"text\"\n                    name=\"q\" //q = query\n                    id=\"q\"\n                    onChange={(e) => setName(e.target.value)}\n                ></input>\n                <button className=\"primary\" type=\"submit\">\n                    <i className=\"fa fa-search\"></i>\n                </button>\n            </div>\n        </form>\n    );\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport default function SellerRoute({ component: Component, ...rest }) {\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        userInfo && userInfo.isSeller ? (\n          <Component {...props}></Component>\n        ) : (\n          <Redirect to=\"/signin\" />\n        )\n      }\n    ></Route>\n  );\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_ADD_ITEM_FAIL = 'CART_ADD_ITEM_FAIL'\nexport const CART_REMOVE_ITEM ='CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\nexport const CART_EMPTY = 'CART_EMPTY'","import Axios from 'axios'\nimport { CART_ADD_ITEM, CART_ADD_ITEM_FAIL, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from \"../constants/cartConstants\";\n\nexport const addToCart = (productId, qty) => async (dispatch, getState) => {\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    const { cart: { cartItems } } = getState();\n    if (cartItems.length > 0 && data.seller._id !== cartItems[0].seller._id) {\n        dispatch({ type: CART_ADD_ITEM_FAIL, payload: `Can't Add To Cart. Buy from ${cartItems[0].seller.seller.name} in this order` })\n    } else {\n        dispatch({\n            type: CART_ADD_ITEM,\n            payload: {\n                name: data.name,\n                image: data.image,\n                price: data.price,\n                countInStock: data.countInStock,\n                product: data._id,\n                seller: data.seller,\n                qty,\n            },\n        });\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n    }\n\n};\n\nexport const removeFromCart = (productId) => (dispatch, getState) => {\n    dispatch({ type: CART_REMOVE_ITEM, payload: productId });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data })\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data })\n}\n\n\n\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport MessageBox from '../components/MessageBox';\n\nfunction CartScreen(props) {\n    const productId = props.match.params.id;\n    const qty = props.location.search\n        ? Number(props.location.search.split('=')[1])\n        : 1;\n\n    const cart = useSelector(state => state.cart);\n    const { cartItems, error } = cart;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (productId) {\n            dispatchEvent(addToCart(productId, qty));\n        }\n\n    }, [dispatch, productId, qty]);\n\n    const removeFromCartHandler = (id) => {\n        //delete action\n        dispatch(removeFromCart(id));\n    };\n\n    const checkoutHandler = () => {\n        props.history.push('/signin?redirect=shipping');\n    };\n    return (\n        <div className=\"row top\">\n            <div className=\"col-2\">\n                <h1>Shopping Cart</h1>\n                {error && (<MessageBox variant=\"danger\">{error}</MessageBox>)}\n                {cartItems.length === 0 ? (<MessageBox>\n                    Cart is empty. <Link to=\"/\">Go Shopping</Link>\n                </MessageBox>) : (\n                        <ul>\n                            {cartItems.map((item) => (\n                                <li key={item.product}>\n                                    <div className=\"row\">\n                                        <div>\n                                            <img\n                                                src={item.image}\n                                                alt={item.name}\n                                                className=\"small\"></img>\n                                        </div>\n                                        <div className=\"min-30\">\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </div>\n                                        <div>\n                                            <select value={item.qty}\n                                                onChange={(e) =>\n                                                    dispatch(\n                                                        addToCart(item.product, Number(e.target.value))\n                                                    )\n                                                }\n                                            >\n                                                {[...Array(item.countInStock).keys()].map(\n                                                    (x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    )\n                                                )}\n                                            </select>\n                                        </div>\n                                        <div>\n                                            ${item.price}\n                                        </div>\n                                        <div>\n                                            <button type=\"button\"\n                                                onClick={() => removeFromCartHandler(item.product)}>\n                                                Delete\n                                            </button>\n                                        </div>\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n            </div>\n            <div className=\"col-1\">\n                <div className=\"card card-body\">\n                    <ul>\n                        <li>\n                            <h2>\n                                Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items) :\n                            ${cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\n                            </h2>\n                        </li>\n                        <li>\n                            <button\n                                type=\"button\"\n                                onClick={checkoutHandler}\n                                className=\"primary block\"\n                                disabled={cartItems.length === 0}\n                            >\n                                Proceed to Checkout\n                            </button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CartScreen\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Chart from 'react-google-charts';\nimport { summaryOrder } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nexport default function DashboardScreen() {\n    const orderSummary = useSelector((state) => state.orderSummary);\n    const { loading, summary, error } = orderSummary;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(summaryOrder());\n    }, [dispatch]);\n    return (\n        <div>\n            <div className=\"row\">\n                <h1>Dashboard</h1>\n            </div>\n            {loading ? (\n                <LoadingBox />\n            ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                        <>\n                            <ul className=\"row summary\">\n                                <li>\n                                    <div className=\"summary-title color1\">\n                                        <span>\n                                            <i className=\"fa fa-users\" /> Users\n                </span>\n                                    </div>\n                                    <div className=\"summary-body\">{summary.users[0].numUsers}</div>\n                                </li>\n                                <li>\n                                    <div className=\"summary-title color2\">\n                                        <span>\n                                            <i className=\"fa fa-shopping-cart\" /> Orders\n                </span>\n                                    </div>\n                                    <div className=\"summary-body\">\n                                        {summary.orders[0] ? summary.orders[0].numOrders : 0}\n                                    </div>\n                                </li>\n                                <li>\n                                    <div className=\"summary-title color3\">\n                                        <span>\n                                            <i className=\"fa fa-money\" /> Sales\n                </span>\n                                    </div>\n                                    <div className=\"summary-body\">\n                                        $\n                {summary.orders[0]\n                                            ? summary.orders[0].totalSales.toFixed(2)\n                                            : 0}\n                                    </div>\n                                </li>\n                            </ul>\n                            <div>\n                                <div>\n                                    <h2>Sales</h2>\n                                    {summary.dailyOrders.length === 0 ? (\n                                        <MessageBox>No Sale</MessageBox>\n                                    ) : (\n                                            <Chart\n                                                width=\"100%\"\n                                                height=\"400px\"\n                                                chartType=\"AreaChart\"\n                                                loader={<div>Loading Chart</div>}\n                                                data={[\n                                                    ['Date', 'Sales'],\n                                                    ...summary.dailyOrders.map((x) => [x._id, x.sales]),\n                                                ]}\n                                            ></Chart>\n                                        )}\n                                </div>\n                            </div>\n                            <div>\n                                <h2>Categories</h2>\n                                {summary.productCategories.length === 0 ? (\n                                    <MessageBox>No Category</MessageBox>\n                                ) : (\n                                        <Chart\n                                            width=\"100%\"\n                                            height=\"400px\"\n                                            chartType=\"PieChart\"\n                                            loader={<div>Loading Chart</div>}\n                                            data={[\n                                                ['Category', 'Products'],\n                                                ...summary.productCategories.map((x) => [x._id, x.count]),\n                                            ]}\n                                        />\n                                    )}\n                            </div>\n                        </>\n                    )}\n        </div>\n    );\n}","import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport {\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_SUCCESS,\n    ORDER_MINE_LIST_REQUEST,\n    ORDER_MINE_LIST_FAIL,\n    ORDER_MINE_LIST_SUCCESS,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELETE_REQUEST,\n    ORDER_DELETE_SUCCESS,\n    ORDER_DELETE_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_SUMMARY_REQUEST,\n    ORDER_SUMMARY_SUCCESS,\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n    try {\n        const {\n            userSignin: { userInfo },\n        } = getState();\n        const { data } = await Axios.post('/api/orders', order, {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        });\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\n        dispatch({ type: CART_EMPTY });\n        localStorage.removeItem('cartItems');\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.get(`/api/orders/${orderId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n    }\n};\n\nexport const payOrder = (order, paymentResult) => async (\n    dispatch,\n    getState\n) => {\n    dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: ORDER_PAY_FAIL, payload: message });\n    }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n    dispatch({ type: ORDER_MINE_LIST_REQUEST });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.get('/api/orders/mine', {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        });\n        dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\n    }\n};\nexport const listOrders = ({ seller = '' }) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_LIST_REQUEST });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.get(`/api/orders?seller=${seller}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        console.log(data);\n        dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: ORDER_LIST_FAIL, payload: message });\n    }\n};\nexport const deleteOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = Axios.delete(`/api/orders/${orderId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: ORDER_DELETE_FAIL, payload: message });\n    }\n};\n\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DELIVER_REQUEST, payload: orderId });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = Axios.put(\n            `/api/orders/${orderId}/deliver`,\n            {},\n            {\n                headers: { Authorization: `Bearer ${userInfo.token}` },\n            }\n        );\n        dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n    }\n};\n\nexport const summaryOrder = () => async (dispatch, getState) => {\n    dispatch({ type: ORDER_SUMMARY_REQUEST });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.get('/api/orders/summary', {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDER_DETAILS_REQUEST ='ORDER_DETAILS_REQUEST';\nexport const ORDER_DETAILS_SUCCESS ='ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAIL ='ORDER_DETAILS_FAIL';\n\nexport const ORDER_MINE_LIST_REQUEST ='ORDER_MINE_LIST_REQUEST';\nexport const ORDER_MINE_LIST_SUCCESS ='ORDER_MINE_LIST_SUCCESS';\nexport const ORDER_MINE_LIST_FAIL ='ORDER_MINE_LIST_FAIL';\n\nexport const ORDER_LIST_REQUEST ='ORDER_LIST_REQUEST';\nexport const ORDER_LIST_SUCCESS ='ORDER_LIST_SUCCESS';\nexport const ORDER_LIST_FAIL ='ORDER_LIST_FAIL';\n\nexport const ORDER_DELETE_REQUEST = 'ORDER_DELETE_REQUEST';\nexport const ORDER_DELETE_SUCCESS = 'ORDER_DELETE_SUCCESS';\nexport const ORDER_DELETE_FAIL = 'ORDER_DELETE_FAIL';\nexport const ORDER_DELETE_RESET = 'ORDER_DELETE_RESET';\n\nexport const ORDER_SUMMARY_REQUEST = 'ORDER_SUMMARY_REQUEST';\nexport const ORDER_SUMMARY_SUCCESS = 'ORDER_SUMMARY_SUCCESS';\nexport const ORDER_SUMMARY_FAIL = 'ORDER_SUMMARY_FAIL';\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\n","import React from \"react\";\n\nfunction Rating(props) {\n    const { rating, numReviews } = props;\n    return (\n        <div className=\"rating\">\n            <span>\n                <i\n                    className={\n                        rating >= 1\n                            ? \"fa fa-star\"\n                            : rating >= 0.5\n                                ? \"fa fa-star-half-o\"\n                                : \"fa fa-star-o\"\n                    }\n                ></i>\n            </span>\n            <span>\n                <i\n                    className={\n                        rating >= 2\n                            ? \"fa fa-star\"\n                            : rating >= 1.5\n                                ? \"fa fa-star-half-o\"\n                                : \"fa fa-star-o\"\n                    }\n                ></i>\n            </span>\n            <span>\n                <i\n                    className={\n                        rating >= 3\n                            ? \"fa fa-star\"\n                            : rating >= 2.5\n                                ? \"fa fa-star-half-o\"\n                                : \"fa fa-star-o\"\n                    }\n                ></i>\n            </span>\n            <span>\n                <i\n                    className={\n                        rating >= 4\n                            ? \"fa fa-star\"\n                            : rating >= 3.5\n                                ? \"fa fa-star-half-o\"\n                                : \"fa fa-star-o\"\n                    }\n                ></i>\n            </span>\n            <span>\n                <i\n                    className={\n                        rating >= 5\n                            ? \"fa fa-star\"\n                            : rating >= 4.5\n                                ? \"fa fa-star-half-o\"\n                                : \"fa fa-star-o\"\n                    }\n                ></i>\n            </span>\n            <span>{numReviews + 'reviews'}</span>\n        </div>\n    );\n}\n\nexport default Rating;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Rating from './Rating';\n\nexport default function Product(props) {\n    const { product } = props;\n    return (\n        <div key={product._id} className=\"card\">\n            <Link to={`/product/${product._id}`}>\n                <img className=\"medium\" src={product.image} alt={product.name} />\n            </Link>\n            <div className=\"card-body\">\n                <Link to={`/product/${product._id}`}>\n                    <h2>{product.name}</h2>\n                </Link>\n                <Rating\n                    rating={product.rating}\n                    numReviews={product.numReviews}\n                ></Rating>\n                <div className=\"row\">\n                    <div className=\"price\">${product.price}</div>\n                    <div>\n                        <Link to={`/seller/${product.seller._id}`}>\n                            {product.seller.seller.name}\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect } from 'react'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Carousel } from 'react-responsive-carousel'\nimport Product from '../components/Product'\nimport MessageBox from '../components/MessageBox';\nimport LoadingBox from '../components/LoadingBox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\nimport { listTopSellers } from '../actions/userActions';\nimport { Link } from 'react-router-dom';\n\n\nfunction HomeScreen() {\n    const dispatch = useDispatch();\n\n    const productList = useSelector((state) => state.productList);\n    const { loading, error, products } = productList;\n\n    const userTopSellersList = useSelector((state) => state.userTopSellersList);\n    const { loading: loadingSellers, error: errorSellers, users: sellers } = userTopSellersList;\n\n\n    useEffect(() => {\n        dispatch(listProducts({}));\n        dispatch(listTopSellers());\n    }, [dispatch]);\n\n    return (\n        <div>\n            <h2>Top Sellers</h2>\n            {loadingSellers ? (<LoadingBox></LoadingBox>)\n                : errorSellers ? (<MessageBox variant=\"danger\">{errorSellers}</MessageBox>)\n                    : (\n                        <>\n                            {sellers.length === 0 && <MessageBox>No Seller Found</MessageBox>}\n                            <Carousel showArrows autoPlay showThumbs={false}>\n                                {sellers.map((seller)=>(\n                                    <div key={seller._id}>\n                                        <Link to={`/seller/${seller._id}`}>\n                                            <img src={seller.seller.logo} alt={seller.seller.name} />\n                                            <p className=\"legend\">{seller.seller.name}</p>\n                                        </Link>\n                                    </div>\n                                ))}\n                            </Carousel>\n                        </>\n                    )}\n\n            <h2>Featured Products</h2>\n            {loading ? (<LoadingBox></LoadingBox>)\n                :\n                error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\n                    : (\n                        <>\n                            {products.length === 0 && <MessageBox>No Product Found</MessageBox>}\n                            <div className=\"row center\">\n                                {products.map((product) => (\n                                    <Product key={product._id} product={product}></Product>\n                                ))}\n                            </div>\n                        </>\n\n\n                    )}\n        </div>\n    )\n}\n\nexport default HomeScreen\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n    LoadScript,\n    GoogleMap,\n    StandaloneSearchBox,\n    Marker,\n} from '@react-google-maps/api';\nimport LoadingBox from '../components/LoadingBox';\nimport Axios from 'axios';\nimport { USER_ADDRESS_MAP_CONFIRM } from '../constants/userConstants';\nimport { useDispatch } from 'react-redux';\n\nconst libs = ['places'];\nconst defaultLocation = { lat: 45.516, lng: -73.56 };\n\nfunction MapScreen(props) {\n    const [googleApiKey, setGoogleApiKey] = useState('');\n    const [center, setCenter] = useState(defaultLocation);\n    const [location, setLocation] = useState(center);\n\n    const mapRef = useRef(null);\n    const placeRef = useRef(null);\n    const markerRef = useRef(null);\n\n    useEffect(() => {\n        const fetch = async () => {\n            const { data } = await Axios('/api/config/google');\n            setGoogleApiKey(data);\n            getUserCurrentLocation();\n        };\n        fetch();\n    }, []);\n\n    const onLoad = (map) => {\n        mapRef.current = map;\n    };\n\n    const onMarkerLoad = (marker) => {\n        markerRef.current = marker;\n    };\n    const onLoadPlaces = (place) => {\n        placeRef.current = place;\n    };\n    const onIdle = () => {\n        setLocation({\n            lat: mapRef.current.center.lat(),\n            lng: mapRef.current.center.lng(),\n        });\n    };\n    const onPlacesChanged = () => {\n        const place = placeRef.current.getPlaces()[0].geometry.location;\n        setCenter({ lat: place.lat(), lng: place.lng() });\n        setLocation({ lat: place.lat(), lng: place.lng() });\n    };\n    const dispatch = useDispatch();\n    const onConfirm = () => {\n        const places = placeRef.current.getPlaces();\n        if (places && places.length === 1) {\n            // dispatch select action\n            dispatch({\n                type: USER_ADDRESS_MAP_CONFIRM,\n                payload: {\n                    lat: location.lat,\n                    lng: location.lng,\n                    address: places[0].formatted_address,\n                    name: places[0].name,\n                    vicinity: places[0].vicinity,\n                    googleAddressId: places[0].id,\n                },\n            });\n            alert('location selected successfully.');\n            props.history.push('/shipping');\n        } else {\n            alert('Please enter your address');\n        }\n    };\n\n    const getUserCurrentLocation = () => {\n        if (!navigator.geolocation) {\n            alert('Geolocation os not supported by this browser');\n        } else {\n            navigator.geolocation.getCurrentPosition((position) => {\n                setCenter({\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude,\n                });\n                setLocation({\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude,\n                });\n            });\n        }\n    };\n\n    return googleApiKey ? (\n        <div className=\"full-container\">\n            <LoadScript libraries={libs} googleMapsApiKey={googleApiKey}>\n                <GoogleMap\n                    id=\"sample-map\"\n                    mapContainerStyle={{ height: '100%', width: '100%' }}\n                    center={center}\n                    zoom={15}\n                    onLoad={onLoad}\n                    onIdle={onIdle}\n                >\n                    <StandaloneSearchBox\n                        onLoad={onLoadPlaces}\n                        onPlacesChanged={onPlacesChanged}\n                    >\n                        <div className=\"map-input-box\">\n                            <input type=\"text\" placeholder=\"Enter your address\"></input>\n                            <button type=\"button\" className=\"primary\" onClick={onConfirm}>\n                                Confirm\n              </button>\n                        </div>\n                    </StandaloneSearchBox>\n                    <Marker position={location} onLoad={onMarkerLoad}></Marker>\n                </GoogleMap>\n            </LoadScript>\n        </div>\n    ) : (\n            <LoadingBox></LoadingBox>\n        );\n}\n\nexport default MapScreen","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listOrderMine } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nexport default function OrderHistoryScreen(props) {\n    const orderMineList = useSelector((state) => state.orderMineList);\n    const { loading, error, orders } = orderMineList;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(listOrderMine());\n    }, [dispatch]);\n    return (\n        <div>\n            <h1>Order History</h1>\n            {loading ? (\n                <LoadingBox></LoadingBox>\n            ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>DATE</th>\n                                    <th>TOTAL</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th>ACTIONS</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {orders.map((order) => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>{order.totalPrice.toFixed(2)}</td>\n                                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\n                                        <td>\n                                            {order.isDelivered\n                                                ? order.deliveredAt.substring(0, 10)\n                                                : 'No'}\n                                        </td>\n                                        <td>\n                                            <button\n                                                type=\"button\"\n                                                className=\"small\"\n                                                onClick={() => {\n                                                    props.history.push(`/order/${order._id}`);\n                                                }}\n                                            >\n                                                Details\n                  </button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    )}\n        </div>\n    );\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteOrder, listOrders } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_DELETE_RESET } from '../constants/orderConstants';\n\nfunction OrderListScreen(props) {\n    const sellerMode = props.match.path.indexOf('/seller') >= 0;\n    const orderList = useSelector((state) => state.orderList);\n    const { loading, error, orders } = orderList;\n    const orderDelete = useSelector((state) => state.orderDelete);\n    const {\n        loading: loadingDelete,\n        error: errorDelete,\n        success: successDelete,\n    } = orderDelete;\n\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch({ type: ORDER_DELETE_RESET });\n        dispatch(listOrders({ seller: sellerMode ? userInfo._id : '' }));\n    }, [dispatch, sellerMode, successDelete, userInfo._id]);\n    const deleteHandler = (order) => {\n        if (window.confirm('Are you sure to delete?')) {\n            dispatch(deleteOrder(order._id));\n        }\n    };\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loadingDelete && <LoadingBox></LoadingBox>}\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\n            {loading ? (\n                <LoadingBox></LoadingBox>\n            ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>TOTAL</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th>ACTIONS</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {orders.map((order) => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>{order.totalPrice.toFixed(2)}</td>\n                                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\n                                        <td>\n                                            {order.isDelivered\n                                                ? order.deliveredAt.substring(0, 10)\n                                                : 'No'}\n                                        </td>\n                                        <td>\n                                            <button\n                                                type=\"button\"\n                                                className=\"small\"\n                                                onClick={() => {\n                                                    props.history.push(`/order/${order._id}`);\n                                                }}\n                                            >\n                                                Details\n                  </button>\n                                            <button\n                                                type=\"button\"\n                                                className=\"small\"\n                                                onClick={() => deleteHandler(order)}\n                                            >\n                                                Delete\n                  </button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    )}\n        </div>\n    );\n}\n\nexport default OrderListScreen","import React, { useEffect, useState } from 'react'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Axios from 'axios'\nimport { deliverOrder, detailsOrder, payOrder } from '../actions/orderActions'\nimport LoadingBox from '../components/LoadingBox'\nimport MessageBox from '../components/MessageBox'\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen(props) {\n    const orderId = props.match.params.id;\n    const [sdkReady, setSdkReady] = useState(false);\n    const orderDetails = useSelector((state) => state.orderDetails)\n    const { order, loading, error } = orderDetails\n    const userSignin = useSelector((state) => state.userSignin)\n    const { userInfo } = userSignin;\n\n    const orderPay = useSelector((state) => state.orderPay);\n    const { loading: loadingPay, error: errorPay, success: successPay } = orderPay;\n\n    const orderDeliver = useSelector((state) => state.orderDeliver);\n    const { loading: loadingDeliver, error: errorDeliver, success: successDeliver } = orderDeliver;\n\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const addPayPalScript = async () => {\n            const { data } = await Axios.get('/api/config/paypal');\n            const script = document.createElement('script');\n            script.type = \"text/javascript\";\n            script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n            script.async = true;\n            script.onload = () => {\n                setSdkReady(true);\n            };\n            document.body.appendChild(script);\n        };\n        if (!order || successPay || successDeliver || (order && order._id !== orderId)) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n            dispatch(detailsOrder(orderId))\n        } else {\n            if (!order.isPaid) {\n                if (!window.paypal) {\n                    addPayPalScript();\n                } else {\n                    setSdkReady(true);\n                }\n            }\n        }\n\n    }, [dispatch, order, orderId, sdkReady, successDeliver, successPay]);\n\n    const succesPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(order, paymentResult));\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order._id))\n    }\n\n    return loading ? (<LoadingBox></LoadingBox>) :\n        error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\n            :\n            (\n                <div>\n                    <h1>Order {order._id}</h1>\n                    <div className=\"row top\">\n                        <div className=\"col-2\">\n                            <ul>\n                                <li>\n                                    <div className=\"card  card-body\">\n                                        <h2>Shipping</h2>\n                                        <p>\n                                            <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                                            <strong>Address:</strong> {order.shippingAddress.address},\n                                    {order.shippingAddress.city}, {order.shippingAddress.postalcode},\n                                    {order.shippingAddress.country}\n                                        </p>\n                                        {order.isDelivered ? (\n                                            <MessageBox variant=\"success\">\n                                                Delivered at {order.deliveredAt}</MessageBox>)\n                                            : (<MessageBox variant=\"danger\">Not Delivered</MessageBox>)}\n                                    </div>\n                                </li>\n\n                                <li>\n                                    <div className=\"card  card-body\">\n                                        <h2>Payment</h2>\n                                        <p>\n                                            <strong>Method:</strong> {order.paymentMethod}\n                                        </p>\n                                        {order.isPaid ? (\n                                            <MessageBox variant=\"success\">\n                                                Paid at {order.paidAt}</MessageBox>)\n                                            : (<MessageBox variant=\"danger\">Not Paid</MessageBox>)}\n\n                                    </div>\n                                </li>\n\n                                <li>\n                                    <div className=\"card  card-body\">\n                                        <h2>Order Items</h2>\n                                        <ul>\n                                            {order.orderItems.map((item) => (\n                                                <li key={item.product}>\n                                                    <div className=\"row\">\n                                                        <div>\n                                                            <img\n                                                                src={item.image}\n                                                                alt={item.name}\n                                                                className=\"small\"></img>\n                                                        </div>\n                                                        <div className=\"min-30\">\n                                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                        </div>\n\n                                                        <div>\n                                                            {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                        </div>\n\n                                                    </div>\n                                                </li>\n                                            ))}\n                                        </ul>\n\n                                    </div>\n                                </li>\n\n\n                            </ul>\n                        </div>\n                        <div className=\"col-1\">\n                            <div className=\"card card-body\">\n                                <ul>\n                                    <li>\n                                        <h2>Order Summary</h2>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div>Items</div>\n                                            <div>${order.itemsPrice.toFixed(2)}</div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div>Shipping</div>\n                                            <div>${order.shippingPrice.toFixed(2)}</div>\n                                        </div>\n                                    </li>                            <li>\n                                        <div className=\"row\">\n                                            <div>Taxes</div>\n                                            <div>${order.taxPrice.toFixed(2)}</div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div><strong>Order Total</strong></div>\n                                            <div> <strong>${order.totalPrice.toFixed(2)}</strong></div>\n                                        </div>\n                                    </li>\n                                    {\n                                        !order.isPaid && (\n                                            <li>\n                                                {!sdkReady ? (<LoadingBox></LoadingBox>) :\n                                                    (\n                                                        <>\n                                                            {errorPay && (<MessageBox variant=\"danger\"></MessageBox>)}\n                                                            {loadingPay && <LoadingBox></LoadingBox>}\n                                                            <PayPalButton amount={order.totalPrice}\n                                                                onSuccess={succesPaymentHandler}>\n                                                            </PayPalButton>\n                                                        </>\n                                                    )}\n                                            </li>\n                                        )\n                                    }\n                                    {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                        <li>\n                                            {loadingDeliver && <LoadingBox></LoadingBox>}\n                                            {errorDeliver && (<MessageBox variant=\"danger\">{errorDeliver}</MessageBox>)}\n                                            <button type=\"button\" className=\"primary block\" onClick={deliverHandler}>\n                                                Deliver Order\n                                            </button>\n                                        </li>\n                                    )}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","import React from 'react'\n\nfunction CheckoutSteps(props) {\n    return (\n        <div className=\"row checkout-steps\">\n            <div className={props.step1 ? 'active' : ''}>Sign-IN</div>\n            <div className={props.step2 ? 'active' : ''}>Shipping</div>\n            <div className={props.step3 ? 'active' : ''}>Payment</div>\n            <div className={props.step4 ? 'active' : ''}>Place Order</div>\n        </div>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savePaymentMethod } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nfunction PaymentMethodScreen(props) {\n    const cart = useSelector((state) => state.cart);\n    const {shippingAddress} = cart;\n    if(!shippingAddress.address){\n        props.history.push('/shipping')\n    }\n    const [paymentMethod, setpaymentMethod] = useState('Paypal')\n    const dispatch = useDispatch();\n    const submitHandler = (e) =>{\n        e.preventDefault();\n        dispatch(savePaymentMethod(paymentMethod));\n        props.history.push('/placeorder')\n    }\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Payment Method</h1>\n                </div>\n                <div>\n                    <div>\n                        <input type=\"radio\" id=\"paypal\" value=\"Paypal\" name=\"paymentMethod\"\n                            required checked onChange={(e) => setpaymentMethod(e.target.value)}></input>\n                        <label htmlFor=\"paypal\">Paypal</label>\n                    </div>\n                </div>\n                <div>\n                    <div>\n                        <input type=\"radio\" id=\"stripe\" value=\"Stripe\" name=\"paymentMethod\"\n                            required  onChange={(e) => setpaymentMethod(e.target.value)}></input>\n                        <label htmlFor=\"stripe\">Stripe</label>\n                    </div>\n                </div>\n                <button className=\"primary\" type=\"submit\">Continue</button>\n\n            </form>\n        </div>\n    )\n}\n\nexport default PaymentMethodScreen\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { createOrder } from '../actions/orderActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport LoadingBox from '../components/LoadingBox'\nimport MessageBox from '../components/MessageBox'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen(props) {\n    const cart = useSelector((state) => state.cart)\n    if (!cart.paymentMethod) {\n        props.history.push('/payment')\n    }\n    const orderCreate = useSelector((state) => state.orderCreate);\n    const { loading, success, error, order } = orderCreate\n    const toPrice = (num) => Number(num.toFixed(2));//5.123=>string\"5.12\"=>number 5.12 \n    cart.itemsPrice = toPrice(\n        cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0));\n    cart.shippingPrice = cart.itemsPrice > 100 ? toPrice(0) : toPrice(10);\n    cart.taxPrice = toPrice(0.10 * cart.itemsPrice);\n    cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n    const dispatch = useDispatch();\n    const placeorderHandler = () => {\n        dispatch(createOrder({ ...cart, orderItems: cart.cartItems }));\n    };\n    useEffect(() => {\n        if (success) {\n            props.history.push(`/order${order._id}`);\n            dispatch({ type: ORDER_CREATE_RESET });\n        }\n    }, [dispatch, order, props.history, success]);\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\n            <div className=\"row top\">\n                <div className=\"col-2\">\n                    <ul>\n                        <li>\n                            <div className=\"card  card-body\">\n                                <h2>Shipping</h2>\n                                <p>\n                                    <strong>Name:</strong> {cart.shippingAddress.fullName} <br />\n                                    <strong>Address:</strong> {cart.shippingAddress.address},\n                                    {cart.shippingAddress.city}, {cart.shippingAddress.postalcode},\n                                    {cart.shippingAddress.country}\n                                </p>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"card  card-body\">\n                                <h2>Payment</h2>\n                                <p>\n                                    <strong>Method:</strong> {cart.paymentMethod}\n                                </p>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"card  card-body\">\n                                <h2>Order Items</h2>\n                                <ul>\n                                    {cart.cartItems.map((item) => (\n                                        <li key={item.product}>\n                                            <div className=\"row\">\n                                                <div>\n                                                    <img\n                                                        src={item.image}\n                                                        alt={item.name}\n                                                        className=\"small\"></img>\n                                                </div>\n                                                <div className=\"min-30\">\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </div>\n\n                                                <div>\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                </div>\n\n                                            </div>\n                                        </li>\n                                    ))}\n                                </ul>\n\n                            </div>\n                        </li>\n\n\n                    </ul>\n                </div>\n                <div className=\"col-1\">\n                    <div className=\"card card-body\">\n                        <ul>\n                            <li>\n                                <h2>Order Summary</h2>\n                            </li>\n                            <li>\n                                <div className=\"row\">\n                                    <div>Items</div>\n                                    <div>${cart.itemsPrice.toFixed(2)}</div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"row\">\n                                    <div>Shipping</div>\n                                    <div>${cart.shippingPrice.toFixed(2)}</div>\n                                </div>\n                            </li>                            <li>\n                                <div className=\"row\">\n                                    <div>Taxes</div>\n                                    <div>${cart.taxPrice.toFixed(2)}</div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"row\">\n                                    <div><strong>Order Total</strong></div>\n                                    <div> <strong>${cart.totalPrice.toFixed(2)}</strong></div>\n                                </div>\n                            </li>\n                            <li>\n                                <button type=\"button\"\n                                    onClick={placeorderHandler}\n                                    className=\"primary block\"\n                                    disabled={cart.cartItems.length === 0}>\n                                    Place Order\n                                </button>\n                            </li>\n{loading && <LoadingBox></LoadingBox>}\n{error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\nimport { detailsProduct, updateProduct } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nfunction ProductEditScreen(props) {\n    const productId = props.match.params.id\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [image, setImage] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState('');\n    const [brand, setBrand] = useState('');\n    const [description, setDescription] = useState('');\n\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails;\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate;\n\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        if (successUpdate) {\n            props.history.push('/productlist');\n        }\n        if (!product || (product._id !== productId || successUpdate)) {\n            dispatch({ type: PRODUCT_UPDATE_RESET });\n            dispatch(detailsProduct(productId))\n        } else {\n            setName(product.name)\n            setPrice(product.price)\n            setImage(product.image)\n            setCategory(product.category)\n            setCountInStock(product.countInStock)\n            setBrand(product.brand)\n            setDescription(product.description)\n        }\n    }, [product, dispatch, productId, successUpdate, props.history]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updateProduct({ _id: productId, name, price, image, category, brand, countInStock, description }))\n    }\n\n    const [loadingUpload, setloadingUpload] = useState(false)\n    const [errorUpload, setErrorUpload] = useState('')\n\n    const userSignin = useSelector((state) => state.userSignin)\n    const {userInfo} = userSignin;\n    const uploadFileHandler = async(e) => {\n        const file = e.target.files[0];\n        const bodyFormData = new FormData()\n        bodyFormData.append('image', file);\n        setloadingUpload(true);\n        try {\n            const {data} = await Axios.post('/api/uploads', bodyFormData, {\n                headers: {'Content-Type':'multipart/form-data',\n            Authorization: `Bearer ${userInfo.token}`,\n        }\n            });\n            setImage(data);\n            setloadingUpload(false)\n        } catch (error) {\n            setErrorUpload(error.message)\n            setloadingUpload(false)\n        }\n    }\n\n\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Edit Product{productId}</h1>\n                </div>\n                {loadingUpdate && <LoadingBox></LoadingBox>}\n                {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n                {loading ? (\n                    <LoadingBox></LoadingBox>\n                ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                ) : (\n                            <>\n                                <div>\n                                    <label htmlFor=\"name\">Name</label>\n                                    <input\n                                        id=\"name\"\n                                        type=\"text\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"price\">Price</label>\n                                    <input\n                                        id=\"price\"\n                                        type=\"text\"\n                                        placeholder=\"Enter Price\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"image\">Image</label>\n                                    <input\n                                        id=\"image\"\n                                        type=\"text\"\n                                        placeholder=\"Enter Image\"\n                                        value={image}\n                                        onChange={(e) => setImage(e.target.value)}></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"imageFile\">Image File</label>\n                                    <input\n                                        type=\"file\"\n                                        id=\"imageFile\"\n                                        label=\"Choose Image\"\n                                        onChange={uploadFileHandler}\n                                    ></input>\n                                    {loadingUpload && <LoadingBox></LoadingBox>}\n                                    {errorUpload && <MessageBox variant=\"danger\">{errorUpload}</MessageBox>}\n                                </div>\n                                <div>\n                                    <label htmlFor=\"category\">Category</label>\n                                    <input\n                                        id=\"category\"\n                                        type=\"text\"\n                                        placeholder=\"Enter Category\"\n                                        value={category}\n                                        onChange={(e) => setCategory(e.target.value)}></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"countInStock\">Count In Stock</label>\n                                    <input\n                                        id=\"countInStock\"\n                                        type=\"text\"\n                                        placeholder=\"Enter CountInStock\"\n                                        value={countInStock}\n                                        onChange={(e) => setCountInStock(e.target.value)}></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"brand\">Brand</label>\n                                    <input\n                                        id=\"brand\"\n                                        type=\"text\"\n                                        placeholder=\"Enter Brand\"\n                                        value={brand}\n                                        onChange={(e) => setBrand(e.target.value)}></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"description\">Description</label>\n                                    <textarea\n                                        id=\"description\"\n                                        rows=\"3\"\n                                        type=\"text\"\n                                        placeholder=\"Enter Description\"\n                                        value={description}\n                                        onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n                                <div>\n                                    <label></label>\n                                    <button className=\"primary\" type=\"submit\">\n                                        Update\n                                    </button>\n                                </div>\n                            </>\n                        )}\n            </form>\n        </div>\n    )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n    createProduct,\n    \n    deleteProduct,\n    \n    listProducts,\n} from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport {\n    PRODUCT_CREATE_RESET,\n    PRODUCT_DELETE_RESET,\n} from '../constants/productConstants';\n\nfunction ProductListScreen(props) {\n    const { pageNumber = 1 } = useParams();\n\n    const sellerMode = props.match.path.indexOf('/seller') >= 0;\n    const productList = useSelector((state) => state.productList);\n    const { loading, error, products, page, pages } = productList;\n\n    const productCreate = useSelector((state) => state.productCreate);\n    const {\n        loading: loadingCreate,\n        error: errorCreate,\n        success: successCreate,\n        product: createdProduct,\n    } = productCreate;\n\n    const productDelete = useSelector((state) => state.productDelete);\n    const {\n        loading: loadingDelete,\n        error: errorDelete,\n        success: successDelete,\n    } = productDelete;\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (successCreate) {\n            dispatch({ type: PRODUCT_CREATE_RESET });\n            props.history.push(`/product/${createdProduct._id}/edit`);\n        }\n        if (successDelete) {\n            dispatch({ type: PRODUCT_DELETE_RESET });\n        }\n        dispatch(\n            listProducts({ seller: sellerMode ? userInfo._id : '', pageNumber })\n        );\n    }, [\n        createdProduct,\n        dispatch,\n        props.history,\n        sellerMode,\n        successCreate,\n        successDelete,\n        userInfo._id,\n        pageNumber,\n    ]);\n\n    const deleteHandler = (product) => {\n        if (window.confirm('Are you sure to delete?')) {\n            dispatch(deleteProduct(product._id));\n        }\n    };\n    const createHandler = () => {\n        dispatch(createProduct());\n    };\n    return (\n        <div>\n            <div className=\"row\">\n                <h1>Products</h1>\n                <button type=\"button\" className=\"primary\" onClick={createHandler}>\n                    Create Product\n        </button>\n            </div>\n\n            {loadingDelete && <LoadingBox></LoadingBox>}\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\n\n            {loadingCreate && <LoadingBox></LoadingBox>}\n            {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\n            {loading ? (\n                <LoadingBox></LoadingBox>\n            ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                        <>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th>ACTIONS</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {products.map((product) => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>{product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n                                            <td>\n                                                <button\n                                                    type=\"button\"\n                                                    className=\"small\"\n                                                    onClick={() =>\n                                                        props.history.push(`/product/${product._id}/edit`)\n                                                    }\n                                                >\n                                                    Edit\n                    </button>\n                                                <button\n                                                    type=\"button\"\n                                                    className=\"small\"\n                                                    onClick={() => deleteHandler(product)}\n                                                >\n                                                    Delete\n                    </button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                            <div className=\"row center pagination\">\n                                {[...Array(pages).keys()].map((x) => (\n                                    <Link\n                                        className={x + 1 === page ? 'active' : ''}\n                                        key={x + 1}\n                                        to={`/productlist/pageNumber/${x + 1}`}\n                                    >\n                                        {x + 1}\n                                    </Link>\n                                ))}\n                            </div>\n                        </>\n                    )}\n        </div>\n    );\n}\nexport default ProductListScreen","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createReview, detailsProduct } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Rating from '../components/Rating';\nimport { PRODUCT_REVIEW_CREATE_RESET } from '../constants/productConstants';\n\nexport default function ProductScreen(props) {\n    const dispatch = useDispatch();\n    const productId = props.match.params.id;\n    const [qty, setQty] = useState(1);\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails;\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const productReviewCreate = useSelector((state) => state.productReviewCreate);\n    const {\n        loading: loadingReviewCreate,\n        error: errorReviewCreate,\n        success: successReviewCreate,\n    } = productReviewCreate;\n\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n\n    useEffect(() => {\n        if (successReviewCreate) {\n            window.alert('Review Submitted Successfully');\n            setRating('');\n            setComment('');\n            dispatch({ type: PRODUCT_REVIEW_CREATE_RESET });\n        }\n        dispatch(detailsProduct(productId));\n    }, [dispatch, productId, successReviewCreate]);\n\n    const addToCartHandler = () => {\n        props.history.push(`/cart/${productId}?qty=${qty}`);\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (comment && rating) {\n            dispatch(\n                createReview(productId, { rating, comment, name: userInfo.name })\n            );\n        } else {\n            alert('Please enter comment and rating');\n        }\n    };\n    \n    return (\n        <div>\n            {loading ? (\n                <LoadingBox></LoadingBox>\n            ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                        <div>\n                            <Link to=\"/\">Back to result</Link>\n                            <div className=\"row top\">\n                                <div className=\"col-2\">\n                                    <img\n                                        className=\"large\"\n                                        src={product.image}\n                                        alt={product.name}\n                                    ></img>\n                                </div>\n                                <div className=\"col-1\">\n                                    <ul>\n                                        <li>\n                                            <h1>{product.name}</h1>\n                                        </li>\n                                        <li>\n                                            <Rating\n                                                rating={product.rating}\n                                                numReviews={product.numReviews}\n                                            ></Rating>\n                                        </li>\n                                        <li>Price : ${product.price}</li>\n                                        <li>\n                                            Description:\n                  <p>{product.description}</p>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <div className=\"col-1\">\n                                    <div className=\"card card-body\">\n                                        <ul>\n                                            <li>\n                                                Seller{' '}\n                                                <h2>\n                                                    <Link to={`/seller/${product.seller._id}`}>\n                                                        {product.seller.seller.name}\n                                                    </Link>\n                                                </h2>\n                                                <Rating\n                                                    rating={product.seller.seller.rating}\n                                                    numReviews={product.seller.seller.numReviews}\n                                                ></Rating>\n                                            </li>\n                                            <li>\n                                                <div className=\"row\">\n                                                    <div>Price</div>\n                                                    <div className=\"price\">${product.price}</div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div className=\"row\">\n                                                    <div>Status</div>\n                                                    <div>\n                                                        {product.countInStock > 0 ? (\n                                                            <span className=\"success\">In Stock</span>\n                                                        ) : (\n                                                                <span className=\"danger\">Unavailable</span>\n                                                            )}\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            {product.countInStock > 0 && (\n                                                <>\n                                                    <li>\n                                                        <div className=\"row\">\n                                                            <div>Qty</div>\n                                                            <div>\n                                                                <select\n                                                                    value={qty}\n                                                                    onChange={(e) => setQty(e.target.value)}\n                                                                >\n                                                                    {[...Array(product.countInStock).keys()].map(\n                                                                        (x) => (\n                                                                            <option key={x + 1} value={x + 1}>\n                                                                                {x + 1}\n                                                                            </option>\n                                                                        )\n                                                                    )}\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                    </li>\n                                                    <li>\n                                                        <button\n                                                            onClick={addToCartHandler}\n                                                            className=\"primary block\"\n                                                        >\n                                                            Add to Cart\n                        </button>\n                                                    </li>\n                                                </>\n                                            )}\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <h2 id=\"reviews\">Reviews</h2>\n                                {product.reviews.length === 0 && (\n                                    <MessageBox>There is no review</MessageBox>\n                                )}\n                                <ul>\n                                    {product.reviews.map((review) => (\n                                        <li key={review._id}>\n                                            <strong>{review.name}</strong>\n                                            <Rating rating={review.rating} caption=\" \"></Rating>\n                                            <p>{review.createdAt.substring(0, 10)}</p>\n                                            <p>{review.comment}</p>\n                                        </li>\n                                    ))}\n                                    <li>\n                                        {userInfo ? (\n                                            <form className=\"form\" onSubmit={submitHandler}>\n                                                <div>\n                                                    <h2>Write a customer review</h2>\n                                                </div>\n                                                <div>\n                                                    <label htmlFor=\"rating\">Rating</label>\n                                                    <select\n                                                        id=\"rating\"\n                                                        value={rating}\n                                                        onChange={(e) => setRating(e.target.value)}\n                                                    >\n                                                        <option value=\"\">Select...</option>\n                                                        <option value=\"1\">1- Poor</option>\n                                                        <option value=\"2\">2- Fair</option>\n                                                        <option value=\"3\">3- Good</option>\n                                                        <option value=\"4\">4- Very good</option>\n                                                        <option value=\"5\">5- Excelent</option>\n                                                    </select>\n                                                </div>\n                                                <div>\n                                                    <label htmlFor=\"comment\">Comment</label>\n                                                    <textarea\n                                                        id=\"comment\"\n                                                        value={comment}\n                                                        onChange={(e) => setComment(e.target.value)}\n                                                    ></textarea>\n                                                </div>\n                                                <div>\n                                                    <label />\n                                                    <button className=\"primary\" type=\"submit\">\n                                                        Submit\n                      </button>\n                                                </div>\n                                                <div>\n                                                    {loadingReviewCreate && <LoadingBox></LoadingBox>}\n                                                    {errorReviewCreate && (\n                                                        <MessageBox variant=\"danger\">\n                                                            {errorReviewCreate}\n                                                        </MessageBox>\n                                                    )}\n                                                </div>\n                                            </form>\n                                        ) : (\n                                                <MessageBox>\n                                                    Please <Link to=\"/signin\">Sign In</Link> to write a review\n                                                </MessageBox>\n                                            )}\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    )}\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nfunction ProfileScreen() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [sellerName, setSellerName] = useState('');\n    const [sellerLogo, setSellerLogo] = useState('');\n    const [sellerDescription, setSellerDescription] = useState('');\n\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n    const {\n        success: successUpdate,\n        error: errorUpdate,\n        loading: loadingUpdate,\n    } = userUpdateProfile;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (!user) {\n            dispatch({ type: USER_UPDATE_PROFILE_RESET });\n            dispatch(detailsUser(userInfo._id));\n        } else {\n            setName(user.name);\n            setEmail(user.email);\n            if (user.seller) {\n                setSellerName(user.seller.name);\n                setSellerLogo(user.seller.logo);\n                setSellerDescription(user.seller.description);\n            }\n        }\n    }, [dispatch, userInfo._id, user]);\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // dispatch update profile\n        if (password !== confirmPassword) {\n            alert('Password and Confirm Password Are Not Matched');\n        } else {\n            dispatch(\n                updateUserProfile({\n                    userId: user._id,\n                    name,\n                    email,\n                    password,\n                    sellerName,\n                    sellerLogo,\n                    sellerDescription,\n                })\n            );\n        }\n    };\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>User Profile</h1>\n                </div>\n                {loading ? (\n                    <LoadingBox></LoadingBox>\n                ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                ) : (\n                            <>\n                                {loadingUpdate && <LoadingBox></LoadingBox>}\n                                {errorUpdate && (\n                                    <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\n                                )}\n                                {successUpdate && (\n                                    <MessageBox variant=\"success\">\n                                        Profile Updated Successfully\n                                    </MessageBox>\n                                )}\n                                <div>\n                                    <label htmlFor=\"name\">Name</label>\n                                    <input\n                                        id=\"name\"\n                                        type=\"text\"\n                                        placeholder=\"Enter name\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    ></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"email\">Email</label>\n                                    <input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter email\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    ></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"password\">Password</label>\n                                    <input\n                                        id=\"password\"\n                                        type=\"password\"\n                                        placeholder=\"Enter password\"\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    ></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"confirmPassword\">confirm Password</label>\n                                    <input\n                                        id=\"confirmPassword\"\n                                        type=\"password\"\n                                        placeholder=\"Enter confirm password\"\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                    ></input>\n                                </div>\n                                {user.isSeller && (\n                                    <>\n                                        <h2>Seller</h2>\n                                        <div>\n                                            <label htmlFor=\"sellerName\">Seller Name</label>\n                                            <input\n                                                id=\"sellerName\"\n                                                type=\"text\"\n                                                placeholder=\"Enter Seller Name\"\n                                                value={sellerName}\n                                                onChange={(e) => setSellerName(e.target.value)}\n                                            ></input>\n                                        </div>\n                                        <div>\n                                            <label htmlFor=\"sellerLogo\">Seller Logo</label>\n                                            <input\n                                                id=\"sellerLogo\"\n                                                type=\"text\"\n                                                placeholder=\"Enter Seller Logo\"\n                                                value={sellerLogo}\n                                                onChange={(e) => setSellerLogo(e.target.value)}\n                                            ></input>\n                                        </div>\n                                        <div>\n                                            <label htmlFor=\"sellerDescription\">Seller Description</label>\n                                            <input\n                                                id=\"sellerDescription\"\n                                                type=\"text\"\n                                                placeholder=\"Enter Seller Description\"\n                                                value={sellerDescription}\n                                                onChange={(e) => setSellerDescription(e.target.value)}\n                                            ></input>\n                                        </div>\n                                    </>\n                                )}\n                                <div>\n                                    <label />\n                                    <button className=\"primary\" type=\"submit\">\n                                        Update\n              </button>\n                                </div>\n                            </>\n                        )}\n            </form>\n        </div>\n    );\n}\n\nexport default ProfileScreen","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { register } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\n\nfunction RegisterScreen(props) {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('')\n    const [confirmpassword, setConfirmPassword] = useState('')\n\n\n    const redirect = props.location.search\n        ? props.location.search.split('=')[1]\n        : '/';\n    const userRegister = useSelector((state) => state.userRegister)\n    const { userInfo, loading, error } = userRegister\n\n    const dispatch = useDispatch();\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmpassword) {\n            alert('Password and Confirm Password are not match');\n        } else {\n            dispatch(register(name, email, password));\n        }\n    };\n    useEffect(() => {\n        if (userInfo) {\n            props.history.push(redirect)\n        }\n    }, [props.history, redirect, userInfo])\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Register</h1>\n                </div>\n                {loading && <LoadingBox></LoadingBox>}\n                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\"\n                        id=\"name\"\n                        placeholder=\"Enter Name\"\n                        required\n                        onChange={(e) => setName(e.target.value)}\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input type=\"email\"\n                        id=\"email\"\n                        placeholder=\"Enter Email\"\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\"\n                        id=\"password\"\n                        placeholder=\"Enter Password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                    <input type=\"password\"\n                        id=\"confirmpassword\"\n                        placeholder=\"Enter Confirm Password\"\n                        required\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></input>\n                </div>\n\n                <div>\n                    <label />\n                    <button className=\"primary\" type=\"submit\">Register</button>\n                </div>\n                <div>\n                    <label />\n                    <div>\n                        Already have an account? {''}<Link to={`/signin?redirect=${redirect}`}>Sign In</Link>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default RegisterScreen\n","export const prices = [\n    {\n        name: 'Any',\n        min: 0,\n        max: 0,\n    },\n    {\n        name: `$1 to $10`,\n        min: 1,\n        max: 10,\n    },\n    {\n        name: `$10 to $100`,\n        min: 10,\n        max: 100,\n    },\n    {\n        name: `$100 to $1000`,\n        min: 100,\n        max: 1000,\n    },\n];\nexport const ratings = [\n    {\n        name: '4stars & up',\n        rating: 4,\n    },\n\n    {\n        name: '3stars & up',\n        rating: 3,\n    },\n\n    {\n        name: '2stars & up',\n        rating: 2,\n    },\n\n    {\n        name: '1stars & up',\n        rating: 1,\n    },\n];","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { listProducts } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Product from '../components/Product';\nimport Rating from '../components/Rating';\nimport { prices, ratings } from '../utils';\n\nfunction SearchScreen(props) {\n    const {\n        name = 'all',\n        category = 'all',\n        min = 0,\n        max = 0,\n        rating = 0,\n        order = 'newest',\n        pageNumber = 1,\n    } = useParams();\n    const dispatch = useDispatch();\n    const productList = useSelector((state) => state.productList);\n    const { loading, error, products, page, pages } = productList;\n\n    const productCategoryList = useSelector((state) => state.productCategoryList);\n    const {\n        loading: loadingCategories,\n        error: errorCategories,\n        categories,\n    } = productCategoryList;\n    useEffect(() => {\n        dispatch(\n            listProducts({\n                pageNumber,\n                name: name !== 'all' ? name : '',\n                category: category !== 'all' ? category : '',\n                min,\n                max,\n                rating,\n                order,\n            })\n        );\n    }, [category, dispatch, max, min, name, order, rating, pageNumber]);\n\n    const getFilterUrl = (filter) => {\n        const filterPage = filter.page || pageNumber;\n        const filterCategory = filter.category || category;\n        const filterName = filter.name || name;\n        const filterRating = filter.rating || rating;\n        const sortOrder = filter.order || order;\n        const filterMin = filter.min ? filter.min : filter.min === 0 ? 0 : min;\n        const filterMax = filter.max ? filter.max : filter.max === 0 ? 0 : max;\n        return `/search/category/${filterCategory}/name/${filterName}/min/${filterMin}/max/${filterMax}/rating/${filterRating}/order/${sortOrder}/pageNumber/${filterPage}`;\n    };\n    return (\n        <div>\n            <div className=\"row\">\n                {loading ? (\n                    <LoadingBox></LoadingBox>\n                ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                ) : (\n                            <div>{products.length} Results</div>\n                        )}\n                <div>\n                    Sort by{' '}\n                    <select\n                        value={order}\n                        onChange={(e) => {\n                            props.history.push(getFilterUrl({ order: e.target.value }));\n                        }}\n                    >\n                        <option value=\"newest\">Newest Arrivals</option>\n                        <option value=\"lowest\">Price: Low to High</option>\n                        <option value=\"highest\">Price: High to Low</option>\n                        <option value=\"toprated\">Avg. Customer Reviews</option>\n                    </select>\n                </div>\n            </div>\n            <div className=\"row top\">\n                <div className=\"col-1\">\n                    <h3>Department</h3>\n                    <div>\n                        {loadingCategories ? (\n                            <LoadingBox></LoadingBox>\n                        ) : errorCategories ? (\n                            <MessageBox variant=\"danger\">{errorCategories}</MessageBox>\n                        ) : (\n                                    <ul>\n                                        <li>\n                                            <Link\n                                                className={'all' === category ? 'active' : ''}\n                                                to={getFilterUrl({ category: 'all' })}\n                                            >\n                                                Any\n                  </Link>\n                                        </li>\n                                        {categories.map((c) => (\n                                            <li key={c}>\n                                                <Link\n                                                    className={c === category ? 'active' : ''}\n                                                    to={getFilterUrl({ category: c })}\n                                                >\n                                                    {c}\n                                                </Link>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                )}\n                    </div>\n                    <div>\n                        <h3>Price</h3>\n                        <ul>\n                            {prices.map((p) => (\n                                <li key={p.name}>\n                                    <Link\n                                        to={getFilterUrl({ min: p.min, max: p.max })}\n                                        className={\n                                            `${p.min}-${p.max}` === `${min}-${max}` ? 'active' : ''\n                                        }\n                                    >\n                                        {p.name}\n                                    </Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div>\n                        <h3>Avg. Customer Review</h3>\n                        <ul>\n                            {ratings.map((r) => (\n                                <li key={r.name}>\n                                    <Link\n                                        to={getFilterUrl({ rating: r.rating })}\n                                        className={`${r.rating}` === `${rating}` ? 'active' : ''}\n                                    >\n                                        <Rating caption={' & up'} rating={r.rating}></Rating>\n                                    </Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"col-3\">\n                    {loading ? (\n                        <LoadingBox></LoadingBox>\n                    ) : error ? (\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\n                    ) : (\n                                <>\n                                    {products.length === 0 && (\n                                        <MessageBox>No Product Found</MessageBox>\n                                    )}\n                                    <div className=\"row center\">\n                                        {products.map((product) => (\n                                            <Product key={product._id} product={product}></Product>\n                                        ))}\n                                    </div>\n                                    <div className=\"row center pagination\">\n                                        {[...Array(pages).keys()].map((x) => (\n                                            <Link\n                                                className={x + 1 === page ? 'active' : ''}\n                                                key={x + 1}\n                                                to={getFilterUrl({ page: x + 1 })}\n                                            >\n                                                {x + 1}\n                                            </Link>\n                                        ))}\n                                    </div>\n                                </>\n                            )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SearchScreen","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\nimport { detailsUser } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Product from '../components/Product';\nimport Rating from '../components/Rating';\n\nexport default function SellerScreen(props) {\n    const sellerId = props.match.params.id;\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const productList = useSelector((state) => state.productList);\n    const {\n        loading: loadingProducts,\n        error: errorProducts,\n        products,\n    } = productList;\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(detailsUser(sellerId));\n        dispatch(listProducts({ seller: sellerId }));\n    }, [dispatch, sellerId]);\n    return (\n        <div className=\"row top\">\n            <div className=\"col-1\">\n                {loading ? (\n                    <LoadingBox></LoadingBox>\n                ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                ) : (\n                            <ul className=\"card card-body\">\n                                <li>\n                                    <div className=\"row start\">\n                                        <div className=\"p-1\">\n                                            <img\n                                                className=\"small\"\n                                                src={user.seller.logo}\n                                                alt={user.seller.name}\n                                            ></img>\n                                        </div>\n                                        <div className=\"p-1\">\n                                            <h1>{user.seller.name}</h1>\n                                        </div>\n                                    </div>\n                                </li>\n                                <li>\n                                    <Rating\n                                        rating={user.seller.rating}\n                                        numReviews={user.seller.numReviews}\n                                    ></Rating>\n                                </li>\n                                <li>\n                                    <a href={`mailto:${user.email}`}>Contact Seller</a>\n                                </li>\n                                <li>{user.seller.description}</li>\n                            </ul>\n                        )}\n            </div>\n            <div className=\"col-3\">\n                {loadingProducts ? (\n                    <LoadingBox></LoadingBox>\n                ) : errorProducts ? (\n                    <MessageBox variant=\"danger\">{errorProducts}</MessageBox>\n                ) : (\n                            <>\n                                {products.length === 0 && <MessageBox>No Product Found</MessageBox>}\n                                <div className=\"row center\">\n                                    {products.map((product) => (\n                                        <Product key={product._id} product={product}></Product>\n                                    ))}\n                                </div>\n                            </>\n                        )}\n            </div>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nfunction ShippingAddressScreen(props) {\n    const userSignin = useSelector((state) => state.userSignin);\n\n    const { userInfo } = userSignin;\n    const cart = useSelector((state) => state.cart);\n    const { shippingAddress } = cart;\n    const [lat, setLat] = useState(shippingAddress.lat);\n    const [lng, setLng] = useState(shippingAddress.lng);\n    const userAddressMap = useSelector((state) => state.userAddressMap);\n    const { address: addressMap } = userAddressMap;\n\n    if (!userInfo) {\n        props.history.push('/signin');\n    }\n    const [fullName, setFullName] = useState(shippingAddress.fullName);\n    const [address, setAddress] = useState(shippingAddress.address);\n    const [city, setCity] = useState(shippingAddress.city);\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [country, setCountry] = useState(shippingAddress.country);\n    const dispatch = useDispatch();\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const newLat = addressMap ? addressMap.lat : lat;\n        const newLng = addressMap ? addressMap.lng : lng;\n        if (addressMap) {\n            setLat(addressMap.lat);\n            setLng(addressMap.lng);\n        }\n        let moveOn = true;\n        if (!newLat || !newLng) {\n            moveOn = window.confirm(\n                'You did not set your location on map. Continue?'\n            );\n        }\n        if (moveOn) {\n            dispatch(\n                saveShippingAddress({\n                    fullName,\n                    address,\n                    city,\n                    postalCode,\n                    country,\n                    lat: newLat,\n                    lng: newLng,\n                })\n            );\n            props.history.push('/payment');\n        }\n    };\n    const chooseOnMap = () => {\n        dispatch(\n            saveShippingAddress({\n                fullName,\n                address,\n                city,\n                postalCode,\n                country,\n                lat,\n                lng,\n            })\n        );\n        props.history.push('/map');\n    };\n    return (\n        <div>\n            <CheckoutSteps step1 step2></CheckoutSteps>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Shipping Address</h1>\n                </div>\n                <div>\n                    <label htmlFor=\"fullName\">Full Name</label>\n                    <input\n                        type=\"text\"\n                        id=\"fullName\"\n                        placeholder=\"Enter full name\"\n                        value={fullName}\n                        onChange={(e) => setFullName(e.target.value)}\n                        required\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"address\">Address</label>\n                    <input\n                        type=\"text\"\n                        id=\"address\"\n                        placeholder=\"Enter address\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                        required\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"city\">City</label>\n                    <input\n                        type=\"text\"\n                        id=\"city\"\n                        placeholder=\"Enter city\"\n                        value={city}\n                        onChange={(e) => setCity(e.target.value)}\n                        required\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"postalCode\">Postal Code</label>\n                    <input\n                        type=\"text\"\n                        id=\"postalCode\"\n                        placeholder=\"Enter postal code\"\n                        value={postalCode}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                        required\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"country\">Country</label>\n                    <input\n                        type=\"text\"\n                        id=\"country\"\n                        placeholder=\"Enter country\"\n                        value={country}\n                        onChange={(e) => setCountry(e.target.value)}\n                        required\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"chooseOnMap\">Location</label>\n                    <button type=\"button\" onClick={chooseOnMap}>\n                        Choose On Map\n          </button>\n                </div>\n                <div>\n                    <label />\n                    <button className=\"primary\" type=\"submit\">\n                        Continue\n          </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default ShippingAddressScreen","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { signin } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\n\nfunction SigninScreen(props) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('')\n\n    const redirect = props.location.search\n        ? props.location.search.split('=')[1]\n        : '/';\n    const userSignin = useSelector((state) => state.userSignin)\n    const { userInfo, loading, error } = userSignin\n\n    const dispatch = useDispatch();\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(signin(email, password));\n    };\n    useEffect(() => {\n        if (userInfo) {\n            props.history.push(redirect)\n        }\n    }, [props.history, redirect, userInfo])\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Sign In</h1>\n                </div>\n                {loading && <LoadingBox></LoadingBox>}\n                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n                <div>\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input type=\"email\"\n                        id=\"email\"\n                        placeholder=\"Enter Email\"\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></input>\n                </div>\n                <div>\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\"\n                        id=\"password\"\n                        placeholder=\"Enter Password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></input>\n                </div>\n                <div>\n                    <label />\n                    <button className=\"primary\" type=\"submit\">Sign In</button>\n                </div>\n                <div>\n                    <label />\n                    <div>\n                        New Customer? {''}<Link to={`/register?redirect=${redirect}`}>Create Account</Link>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default SigninScreen\n","import React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport MessageBox from '../components/MessageBox';\n\nlet allUsers = [];\nlet allMessages = [];\nlet allSelectedUser = {};\nconst ENDPOINT =\n    window.location.host.indexOf('localhost') >= 0\n        ? 'http://127.0.0.1:5000'\n        : window.location.host;\n\nexport default function SupportScreen() {\n    const [selectedUser, setSelectedUser] = useState({});\n    const [socket, setSocket] = useState(null);\n    const uiMessagesRef = useRef(null);\n    const [messageBody, setMessageBody] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [users, setUsers] = useState([]);\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n\n    useEffect(() => {\n        if (uiMessagesRef.current) {\n            uiMessagesRef.current.scrollBy({\n                top: uiMessagesRef.current.clientHeight,\n                left: 0,\n                behavior: 'smooth',\n            });\n        }\n\n        if (!socket) {\n            const sk = socketIOClient(ENDPOINT);\n            setSocket(sk);\n            sk.emit('onLogin', {\n                _id: userInfo._id,\n                name: userInfo.name,\n                isAdmin: userInfo.isAdmin,\n            });\n            sk.on('message', (data) => {\n                if (allSelectedUser._id === data._id) {\n                    allMessages = [...allMessages, data];\n                } else {\n                    const existUser = allUsers.find((user) => user._id === data._id);\n                    if (existUser) {\n                        allUsers = allUsers.map((user) =>\n                            user._id === existUser._id ? { ...user, unread: true } : user\n                        );\n                        setUsers(allUsers);\n                    }\n                }\n                setMessages(allMessages);\n            });\n            sk.on('updateUser', (updatedUser) => {\n                const existUser = allUsers.find((user) => user._id === updatedUser._id);\n                if (existUser) {\n                    allUsers = allUsers.map((user) =>\n                        user._id === existUser._id ? updatedUser : user\n                    );\n                    setUsers(allUsers);\n                } else {\n                    allUsers = [...allUsers, updatedUser];\n                    setUsers(allUsers);\n                }\n            });\n            sk.on('listUsers', (updatedUsers) => {\n                allUsers = updatedUsers;\n                setUsers(allUsers);\n            });\n            sk.on('selectUser', (user) => {\n                allMessages = user.messages;\n                setMessages(allMessages);\n            });\n        }\n    }, [messages, socket, users, userInfo._id, userInfo.isAdmin, userInfo.name]);\n\n    const selectUser = (user) => {\n        allSelectedUser = user;\n        setSelectedUser(allSelectedUser);\n        const existUser = allUsers.find((x) => x._id === user._id);\n        if (existUser) {\n            allUsers = allUsers.map((x) =>\n                x._id === existUser._id ? { ...x, unread: false } : x\n            );\n            setUsers(allUsers);\n        }\n        socket.emit('onUserSelected', user);\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (!messageBody.trim()) {\n            alert('Error. Please type message.');\n        } else {\n            allMessages = [\n                ...allMessages,\n                { body: messageBody, name: userInfo.name },\n            ];\n            setMessages(allMessages);\n            setMessageBody('');\n            setTimeout(() => {\n                socket.emit('onMessage', {\n                    body: messageBody,\n                    name: userInfo.name,\n                    isAdmin: userInfo.isAdmin,\n                    _id: selectedUser._id,\n                });\n            }, 1000);\n        }\n    };\n\n    return (\n        <div className=\"row top full-container\">\n            <div className=\"col-1 support-users\">\n                {users.filter((x) => x._id !== userInfo._id).length === 0 && (\n                    <MessageBox>No Online User Found</MessageBox>\n                )}\n                <ul>\n                    {users\n                        .filter((x) => x._id !== userInfo._id)\n                        .map((user) => (\n                            <li\n                                key={user._id}\n                                className={user._id === selectedUser._id ? '  selected' : '  '}\n                            >\n                                <button\n                                    className=\"block\"\n                                    type=\"button\"\n                                    onClick={() => selectUser(user)}\n                                >\n                                    {user.name}\n                                </button>\n                                <span\n                                    className={\n                                        user.unread ? 'unread' : user.online ? 'online' : 'offline'\n                                    }\n                                />\n                            </li>\n                        ))}\n                </ul>\n            </div>\n            <div className=\"col-3 support-messages\">\n                {!selectedUser._id ? (\n                    <MessageBox>Select a user to start chat</MessageBox>\n                ) : (\n                        <div>\n                            <div className=\"row\">\n                                <strong>Chat with {selectedUser.name} </strong>\n                            </div>\n                            <ul ref={uiMessagesRef}>\n                                {messages.length === 0 && <li>No message.</li>}\n                                {messages.map((msg, index) => (\n                                    <li key={index}>\n                                        <strong>{`${msg.name}: `}</strong> {msg.body}\n                                    </li>\n                                ))}\n                            </ul>\n                            <div>\n                                <form onSubmit={submitHandler} className=\"row\">\n                                    <input\n                                        value={messageBody}\n                                        onChange={(e) => setMessageBody(e.target.value)}\n                                        type=\"text\"\n                                        placeholder=\"type message\"\n                                    />\n                                    <button type=\"submit\">Send</button>\n                                </form>\n                            </div>\n                        </div>\n                    )}\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUser } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\n\nexport default function UserEditScreen(props) {\n    const userId = props.match.params.id;\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [isSeller, setIsSeller] = useState(false);\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const userUpdate = useSelector((state) => state.userUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = userUpdate;\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET });\n            props.history.push('/userlist');\n        }\n        if (!user) {\n            dispatch(detailsUser(userId));\n        } else {\n            setName(user.name);\n            setEmail(user.email);\n            setIsSeller(user.isSeller);\n            setIsAdmin(user.isAdmin);\n        }\n    }, [dispatch, props.history, successUpdate, user, userId]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // dispatch update user\n        dispatch(updateUser({ _id: userId, name, email, isSeller, isAdmin }));\n    };\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Edit User {name}</h1>\n                    {loadingUpdate && <LoadingBox></LoadingBox>}\n                    {errorUpdate && (\n                        <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\n                    )}\n                </div>\n                {loading ? (\n                    <LoadingBox />\n                ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                ) : (\n                            <>\n                                <div>\n                                    <label htmlFor=\"name\">Name</label>\n                                    <input\n                                        id=\"name\"\n                                        type=\"text\"\n                                        placeholder=\"Enter name\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    ></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"email\">Email</label>\n                                    <input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter email\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    ></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"isSeller\">Is Seller</label>\n                                    <input\n                                        id=\"isSeller\"\n                                        type=\"checkbox\"\n                                        checked={isSeller}\n                                        onChange={(e) => setIsSeller(e.target.checked)}\n                                    ></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"isAdmin\">Is Admin</label>\n                                    <input\n                                        id=\"isAdmin\"\n                                        type=\"checkbox\"\n                                        checked={isAdmin}\n                                        onChange={(e) => setIsAdmin(e.target.checked)}\n                                    ></input>\n                                </div>\n                                <div>\n                                    <button type=\"submit\" className=\"primary\">\n                                        Update\n              </button>\n                                </div>\n                            </>\n                        )}\n            </form>\n        </div>\n    );\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteUser, listUsers } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_DETAILS_RESET } from '../constants/userConstants';\n\nexport default function UserListScreen(props) {\n    const userList = useSelector((state) => state.userList);\n    const { loading, error, users } = userList;\n\n    const userDelete = useSelector((state) => state.userDelete);\n    const {\n        loading: loadingDelete,\n        error: errorDelete,\n        success: successDelete,\n    } = userDelete;\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(listUsers());\n        dispatch({\n            type: USER_DETAILS_RESET,\n        });\n    }, [dispatch, successDelete]);\n    const deleteHandler = (user) => {\n        if (window.confirm('Are you sure?')) {\n            dispatch(deleteUser(user._id));\n        }\n    };\n    return (\n        <div>\n            <h1>Users</h1>\n            {loadingDelete && <LoadingBox></LoadingBox>}\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\n            {successDelete && (\n                <MessageBox variant=\"success\">User Deleted Successfully</MessageBox>\n            )}\n            {loading ? (\n                <LoadingBox></LoadingBox>\n            ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>IS SELLER</th>\n                                    <th>IS ADMIN</th>\n                                    <th>ACTIONS</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {users.map((user) => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isSeller ? 'YES' : ' NO'}</td>\n                                        <td>{user.isAdmin ? 'YES' : 'NO'}</td>\n                                        <td>\n                                            <button\n                                                type=\"button\"\n                                                className=\"small\"\n                                                onClick={() => props.history.push(`/user/${user._id}/edit`)}\n                                            >\n                                                Edit\n                  </button>\n                                            <button\n                                                type=\"button\"\n                                                className=\"small\"\n                                                onClick={() => deleteHandler(user)}\n                                            >\n                                                Delete\n                  </button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    )}\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter, Link, Route } from 'react-router-dom'\nimport { listProductCategories } from './actions/productActions';\nimport { signout } from './actions/userActions';\nimport AdminRoute from './components/AdminRoute'\nimport ChatBox from './components/Chatbox';\nimport LoadingBox from './components/LoadingBox';\nimport MessageBox from './components/MessageBox';\nimport PrivateRoute from './components/PrivateRoute';\nimport SearchBox from './components/SearchBox';\nimport SellerRoute from './components/SellerRoute';\nimport CartScreen from './screens/CartScreen';\nimport DashboardScreen from './screens/DashboardScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport MapScreen from './screens/MapScreen';\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport SearchScreen from './screens/SearchScreen';\nimport SellerScreen from './screens/SellerScreen';\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\nimport SigninScreen from './screens/SigninScreen';\nimport SupportScreen from './screens/SupportScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport UserListScreen from './screens/UserListScreen';\n\n\n\n\nfunction App() {\n  const cart = useSelector(state => state.cart);\n  const [sidebarIsOpen, setSidebarIsOpen] = useState(false)\n  const { cartItems } = cart;\n  const userSignin = useSelector((state) => state.userSignin)\n  const { userInfo } = userSignin\n  const dispatch = useDispatch();\n  const signoutHandler = () => {\n    dispatch(signout());\n  };\n\n  const productCategoryList = useSelector((state) => state.productCategoryList);\n  const {\n    loading: loadingCategories,\n    error: errorCategories,\n    categories,\n  } = productCategoryList;\n\n  useEffect(() => {\n    dispatch(listProductCategories())\n  }, [dispatch]);\n\n  return (\n    <BrowserRouter>\n      <div className=\"grid-container\">\n        <header className=\"row\">\n          <div>\n            <button type=\"button\" className=\"open-sidebar\" onClick={() => setSidebarIsOpen(true)}>\n              <i className=\"fa fa-bars\"></i>\n            </button>\n            <Link className=\"brand\" to=\"/\">Ecommerce</Link>\n          </div>\n          <div>\n            <Route render={({ history }) => <SearchBox history={history}></SearchBox>}></Route>\n          </div>\n          <div>\n            <Link to=\"/cart\">Cart\n            {cartItems.length > 0 && (\n                <span className=\"badge\">{cartItems.length}</span>)}\n            </Link>\n\n            {userInfo ? (\n              <div className=\"dropdown\">\n                <Link to=\"#\">{userInfo.name}<i className=\"fa fa-caret-down\"></i></Link>\n                <ul className=\"dropdown-content\">\n                  <li>\n                    <Link to=\"/profile\">User Profile</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/orderhistory\">Order History</Link>\n                  </li>\n                  <li>\n                    <Link to=\"#signout\" onClick={signoutHandler}>\n                      Sign Out\n                </Link>\n                  </li>\n                </ul>\n              </div>\n            ) : (\n                <Link to=\"/signin\">Sign in</Link>\n              )}\n\n            {userInfo && userInfo.isSeller && (\n              <div className=\"dropdown\">\n                <Link to=\"admin\">\n                  Seller<i className=\"fa fa-caret-down\"></i>\n                </Link>\n                <ul className=\"dropdown-content\">\n                  <li>\n                    <Link to=\"/productlist/seller\">Products</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/orderlist/seller\">Orders</Link>\n                  </li>\n                </ul>\n              </div>\n            )}\n\n            {userInfo && userInfo.isAdmin && (\n              <div className=\"dropdown\">\n                <Link to=\"admin\">\n                  Admin<i className=\"fa fa-caret-down\"></i>\n                </Link>\n                <ul className=\"dropdown-content\">\n                  <li>\n                    <Link to=\"/dashboard\">DashBoard</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/productlist\">Products</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/orderlist\">Orders</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/userlist\">Users</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/support\">Support</Link>\n                  </li>\n\n                </ul>\n              </div>\n            )}\n          </div>\n        </header>\n        <aside className={sidebarIsOpen ? 'open' : ''}>\n          <ul className=\"categories\">\n            <li>\n              <strong>Categories</strong>\n              <button\n                onClick={() => setSidebarIsOpen(false)}\n                className=\"close-sidebar\"\n                type=\"button\">\n                <i className=\"fa fa-close\"></i>\n              </button>\n            </li>\n            {loadingCategories ? (\n              <LoadingBox></LoadingBox>\n            ) : errorCategories ? (\n              <MessageBox variant=\"danger\">{errorCategories}</MessageBox>\n            ) : (\n              categories.map((c)=>(\n                <li key={c}>\n                  <Link to={`/search/category/${c}`} onClick={()=> setSidebarIsOpen(false)}>{c}</Link>\n                </li>\n              ))\n            )}\n\n          </ul>\n        </aside>\n        <main>\n          <Route path=\"/seller/:id\" component={SellerScreen}></Route>\n          <Route path=\"/cart/:id?\" component={CartScreen}></Route>\n          <Route path=\"/product/:id\" component={ProductScreen} exact></Route>\n          <Route path=\"/product/:id/edit\" component={ProductEditScreen} exact></Route>\n          <Route path=\"/signin\" component={SigninScreen}></Route>\n          <Route path=\"/register\" component={RegisterScreen}></Route>\n          <Route path=\"/shipping\" component={ShippingAddressScreen}></Route>\n          <Route path=\"/payment\" component={PaymentMethodScreen}></Route>\n          <Route path=\"/placeorder\" component={PlaceOrderScreen}></Route>\n          <Route path=\"/order/:id\" component={OrderScreen}></Route>\n          <Route path=\"/orderhistory\" component={OrderHistoryScreen}></Route>\n          <Route path=\"/search/name/:name?\" component={SearchScreen} exact></Route>\n          <Route path=\"/search/category/:category\" component={SearchScreen} exact></Route>\n          <Route path=\"/search/category/:category/name/:name\" component={SearchScreen} exact></Route>\n          <Route path=\"/search/category/:category/name/:name/min/:min/max/:max/rating/:rating/order/:order/pageNumber/:pageNumber\" component={SearchScreen} exact></Route>\n          <PrivateRoute path=\"/profile\" component={ProfileScreen}></PrivateRoute>\n          <PrivateRoute path=\"/map\" component={MapScreen}></PrivateRoute>\n          <AdminRoute path='/productlist' component={ProductListScreen} exact></AdminRoute>\n          <AdminRoute path='/productlist/pageNumber/:pageNumber' component={ProductListScreen} exact></AdminRoute>\n          <AdminRoute path='/orderlist' component={OrderListScreen} exact></AdminRoute>\n          <AdminRoute path=\"/userlist\" component={UserListScreen}></AdminRoute>\n          <AdminRoute path=\"/dashboard\" component={DashboardScreen}></AdminRoute>\n          <AdminRoute path=\"/support\" component={SupportScreen}></AdminRoute>\n          <AdminRoute path=\"/user/:id/edit\" component={UserEditScreen}></AdminRoute>\n          <SellerRoute path=\"/productlist/seller\" component={ProductListScreen}></SellerRoute>\n          <SellerRoute path=\"/orderlist/seller\" component={OrderListScreen}></SellerRoute>\n          <Route path=\"/\" component={HomeScreen} exact></Route>\n        </main>\n\n        <footer className=\"row center\">\n          {userInfo && !userInfo.isAdmin && <ChatBox userInfo={userInfo} />}\n          <div>All right reserved</div>{''}\n          </footer>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","const {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_RESET,\n    PRODUCT_CATEGORY_LIST_REQUEST,\n    PRODUCT_CATEGORY_LIST_SUCCESS,\n    PRODUCT_CATEGORY_LIST_FAIL,\n    PRODUCT_REVIEW_CREATE_REQUEST,\n    PRODUCT_REVIEW_CREATE_SUCCESS,\n    PRODUCT_REVIEW_CREATE_FAIL,\n    PRODUCT_REVIEW_CREATE_RESET,\n} = require('../constants/productConstants');\n\nexport const productListReducer = (\n    state = { loading: true, products: [] },\n    action\n) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true };\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            };\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const productCategoryListReducer = (\n    state = { loading: true, products: [] },\n    action\n) => {\n    switch (action.type) {\n        case PRODUCT_CATEGORY_LIST_REQUEST:\n            return { loading: true };\n        case PRODUCT_CATEGORY_LIST_SUCCESS:\n            return { loading: false, categories: action.payload };\n        case PRODUCT_CATEGORY_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const productDetailsReducer = (state = { loading: true }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true };\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload };\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true };\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload };\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_CREATE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\nexport const productUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true };\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_UPDATE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true };\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_DELETE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_REVIEW_CREATE_REQUEST:\n            return { loading: true };\n        case PRODUCT_REVIEW_CREATE_SUCCESS:\n            return { loading: false, success: true, review: action.payload };\n        case PRODUCT_REVIEW_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_REVIEW_CREATE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\n","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n    orderCreateReducer,\n    orderDeleteReducer,\n    orderDeliverReducer,\n    orderDetailsReducer,\n    orderListReducer,\n    orderMineListReducer,\n    orderPayReducer,\n    orderSummaryReducer,\n} from './reducers/orderReducers';\nimport {\n    productCategoryListReducer,\n    productCreateReducer,\n    productDeleteReducer,\n    productDetailsReducer,\n    productListReducer,\n    productReviewCreateReducer,\n    productUpdateReducer,\n} from './reducers/productReducers';\nimport {\n    userAddressMapReducer,\n    userDeleteReducer,\n    userDetailsReducer,\n    userListReducer,\n    userRegisterReducer,\n    userSigninReducer,\n    userTopSellerListReducer,\n    userUpdateProfileReducer,\n    userUpdateReducer,\n} from './reducers/userReducers';\n\nconst initialState = {\n    userSignin: {\n        userInfo: localStorage.getItem('userInfo')\n            ? JSON.parse(localStorage.getItem('userInfo'))\n            : null,\n    },\n    cart: {\n        cartItems: localStorage.getItem('cartItems')\n            ? JSON.parse(localStorage.getItem('cartItems'))\n            : [],\n        shippingAddress: localStorage.getItem('shippingAddress')\n            ? JSON.parse(localStorage.getItem('shippingAddress'))\n            : {},\n        paymentMethod: 'PayPal',\n    },\n};\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userSignin: userSigninReducer,\n    userRegister: userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderMineList: orderMineListReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userUpdate: userUpdateReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productDelete: productDeleteReducer,\n    orderList: orderListReducer,\n    orderDelete: orderDeleteReducer,\n    orderDeliver: orderDeliverReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userTopSellersList: userTopSellerListReducer,\n    productCategoryList: productCategoryListReducer,\n    productReviewCreate: productReviewCreateReducer,\n    userAddressMap: userAddressMapReducer,\n    orderSummary: orderSummaryReducer,\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;","import { CART_ADD_ITEM, CART_ADD_ITEM_FAIL, CART_EMPTY, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product);\n            if (existItem) {\n                return {\n                    ...state,\n                    error: '',\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n                }\n            } else {\n                return { ...state, error: '', cartItems: [...state.cartItems, item] };\n            }\n\n        case CART_REMOVE_ITEM:\n            return {\n                ...state, error: '', cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n            };\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state, shippingAddress: action.payload\n            };\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state, paymentMethod: action.payload\n            };\n        case CART_ADD_ITEM_FAIL:\n            return {\n                ...state, error: action.payload\n            };\n\n        case CART_EMPTY:\n            return {\n                ...state, error: '', cartItems: []\n            }\n        default:\n            return state;\n    }\n}","import {\n    USER_ADDRESS_MAP_CONFIRM,\n    USER_DELETE_FAIL,\n    USER_DELETE_REQUEST,\n    USER_DELETE_RESET,\n    USER_DELETE_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_RESET,\n    USER_DETAILS_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_SIGNIN_FAIL,\n    USER_SIGNIN_REQUEST,\n    USER_SIGNIN_SUCCESS,\n    USER_SIGNOUT,\n    USER_TOPSELLERS_LIST_FAIL,\n    USER_TOPSELLERS_LIST_REQUEST,\n    USER_TOPSELLERS_LIST_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_RESET,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_RESET,\n    USER_UPDATE_SUCCESS,\n} from '../constants/userConstants';\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true };\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const userSigninReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_SIGNIN_REQUEST:\n            return { loading: true };\n        case USER_SIGNIN_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_SIGNIN_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_SIGNOUT:\n            return {};\n        default:\n            return state;\n    }\n};\nexport const userDetailsReducer = (state = { loading: true }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { loading: true };\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload };\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DETAILS_RESET:\n            return { loading: true };\n        default:\n            return state;\n    }\n};\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_PROFILE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\nexport const userUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\nexport const userListReducer = (state = { loading: true }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true };\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload };\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true };\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DELETE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\nexport const userTopSellerListReducer = (state = { loading: true }, action) => {\n    switch (action.type) {\n        case USER_TOPSELLERS_LIST_REQUEST:\n            return { loading: true };\n        case USER_TOPSELLERS_LIST_SUCCESS:\n            return { loading: false, users: action.payload };\n        case USER_TOPSELLERS_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const userAddressMapReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_ADDRESS_MAP_CONFIRM:\n            return { address: action.payload };\n        default:\n            return state;\n    }\n};","import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_RESET, ORDER_CREATE_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_RESET, ORDER_DELETE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_RESET, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_RESET, ORDER_PAY_SUCCESS, ORDER_SUMMARY_FAIL, ORDER_SUMMARY_REQUEST, ORDER_SUMMARY_SUCCESS } from \"../constants/orderConstants\";\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return { loading: true };\n        case ORDER_CREATE_SUCCESS:\n            return { loading: false, success: true, order: action.payload };\n        case ORDER_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case ORDER_CREATE_RESET:\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport const orderDetailsReducer = (state = { loading: true, }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return { loading: true };\n        case ORDER_DETAILS_SUCCESS:\n            return { loading: false, order: action.payload };\n        case ORDER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        case ORDER_PAY_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return { loading: true };\n        case ORDER_PAY_SUCCESS:\n            return { loading: false, success: true };\n        case ORDER_PAY_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\n\nexport const orderMineListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_MINE_LIST_REQUEST:\n            return { loading: true };\n        case ORDER_MINE_LIST_SUCCESS:\n            return { loading: false, success: true };\n        case ORDER_MINE_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return { loading: true };\n        case ORDER_LIST_SUCCESS:\n            return { loading: false, success: true };\n        case ORDER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\n\nexport const orderDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELETE_REQUEST:\n            return { loading: true };\n        case ORDER_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case ORDER_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case ORDER_DELETE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return { loading: true };\n        case ORDER_DELIVER_SUCCESS:\n            return { loading: false, success: true };\n        case ORDER_DELIVER_FAIL:\n            return { loading: false, error: action.payload };\n        case ORDER_DELIVER_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const orderSummaryReducer = (\n    state = { loading: true, summary: {} },\n    action\n) => {\n    switch (action.type) {\n        case ORDER_SUMMARY_REQUEST:\n            return { loading: true };\n        case ORDER_SUMMARY_SUCCESS:\n            return { loading: false, summary: action.payload };\n        case ORDER_SUMMARY_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};","\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\nexport const PRODUCT_DELETE_RESET = 'PRODUCT_DELETE_RESET';\n\nexport const PRODUCT_REVIEW_CREATE_REQUEST = 'PRODUCT_REVIEW_CREATE_REQUEST';\nexport const PRODUCT_REVIEW_CREATE_SUCCESS = 'PRODUCT_REVIEW_CREATE_SUCCESS';\nexport const PRODUCT_REVIEW_CREATE_FAIL = 'PRODUCT_REVIEW_CREATE_FAIL';\nexport const PRODUCT_REVIEW_CREATE_RESET = 'PRODUCT_REVIEW_CREATE_RESET';\n\nexport const PRODUCT_CATEGORY_LIST_REQUEST = 'PRODUCT_CATEGORY_LIST_REQUEST';\nexport const PRODUCT_CATEGORY_LIST_SUCCESS = 'PRODUCT_CATEGORY_LIST_SUCCESS';\nexport const PRODUCT_CATEGORY_LIST_FAIL = 'PRODUCT_CATEGORY_LIST_FAIL';\n"],"sourceRoot":""}