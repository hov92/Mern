{"ast":null,"code":"var _jsxFileName = \"/Users/dwaynehovington/Desktop/Mern/mern/client/src/screens/ProfileScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nfunction ProfileScreen() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [sellerName, setsellerName] = useState('');\n  const [sellerLogo, setSellerLogo] = useState('');\n  const [sellerDescription, setSellerDescription] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = userUpdateProfile;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_RESET\n      });\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n\n      if (user.seller) {\n        setsellerName(user.seller.name);\n        setsellerLogo(user.seller.logo);\n        setsellerDescription(user.seller.description);\n      }\n    }\n\n    ;\n  }, [dispatch, userInfo._id, user]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //dispatch\n\n    if (password !== confirmPassword) {\n      alert('Password and Confirm Password Are Not Matched');\n    } else {\n      dispatch(updateUserProfile({\n        userId: user._id,\n        name,\n        email,\n        password,\n        sellerName,\n        sellerLogo,\n        sellerDescription\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submithandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }\n  }, \"User Profile\")), loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 28\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 30\n    }\n  }, error) : /*#__PURE__*/React.createElement(React.Fragment, null, loadingUpdate && /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 47\n    }\n  }), errorUpdate && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 45\n    }\n  }, errorUpdate), successUpdate && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 48\n    }\n  }, \"Profile Updated Succesfully\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"text\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"text\",\n    placeholder: \"Enter password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"confirmPassword\",\n    type: \"text\",\n    placeholder: \"Enter confirmPassword\",\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  })), user.isSeller && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 41\n    }\n  }, \"Seller\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sellerName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 45\n    }\n  }, \"Seller Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"sellerName\",\n    type: \"text\",\n    placeholder: \"Enter Seller Name\",\n    value: sellerName,\n    onChange: e => setSellerName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sellerLogo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 45\n    }\n  }, \"Seller Logo\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"sellerLogo\",\n    type: \"text\",\n    placeholder: \"Enter Seller Logo\",\n    value: sellerLogo,\n    onChange: e => setSellerLogo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sellerDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 45\n    }\n  }, \"Seller Description of Product\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"sellerDescription\",\n    type: \"text\",\n    placeholder: \"Enter Seller Description\",\n    value: sellerDescription,\n    onChange: e => setSellerDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, \"Update\")))));\n}\n\nexport default ProfileScreen;","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/Mern/mern/client/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","sellerName","setsellerName","sellerLogo","setSellerLogo","sellerDescription","setSellerDescription","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","success","successUpdate","errorUpdate","loadingUpdate","dispatch","type","_id","seller","setsellerLogo","logo","setsellerDescription","description","submitHandler","e","preventDefault","alert","userId","submithandler","target","value","isSeller","setSellerName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,wBAA/C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,yBAAT,QAA0C,4BAA1C;;AAEA,SAASC,aAAT,GAAyB;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACqB,iBAAD,EAAoBC,oBAApB,IAA4CtB,QAAQ,CAAC,EAAD,CAA1D;AAEA,QAAMuB,UAAU,GAAGrB,WAAW,CAAEsB,KAAD,IAAWA,KAAK,CAACD,UAAlB,CAA9B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeF,UAArB;AACA,QAAMG,WAAW,GAAGxB,WAAW,CAAEsB,KAAD,IAAWA,KAAK,CAACE,WAAlB,CAA/B;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BH,WAAjC;AACA,QAAMI,iBAAiB,GAAG5B,WAAW,CAAEsB,KAAD,IAAWA,KAAK,CAACM,iBAAlB,CAArC;AACA,QAAM;AAAEC,IAAAA,OAAO,EAAEC,aAAX;AAA0BJ,IAAAA,KAAK,EAAEK,WAAjC;AAA8CN,IAAAA,OAAO,EAAEO;AAAvD,MAAyEJ,iBAA/E;AACA,QAAMK,QAAQ,GAAGlC,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAAC8B,IAAL,EAAW;AACPM,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE7B;AAAR,OAAD,CAAR;AACA4B,MAAAA,QAAQ,CAAChC,WAAW,CAACsB,QAAQ,CAACY,GAAV,CAAZ,CAAR;AACH,KAHD,MAGO;AACH3B,MAAAA,OAAO,CAACmB,IAAI,CAACpB,IAAN,CAAP;AACAG,MAAAA,QAAQ,CAACiB,IAAI,CAAClB,KAAN,CAAR;;AACA,UAAGkB,IAAI,CAACS,MAAR,EAAe;AACXpB,QAAAA,aAAa,CAACW,IAAI,CAACS,MAAL,CAAY7B,IAAb,CAAb;AACA8B,QAAAA,aAAa,CAACV,IAAI,CAACS,MAAL,CAAYE,IAAb,CAAb;AACAC,QAAAA,oBAAoB,CAACZ,IAAI,CAACS,MAAL,CAAYI,WAAb,CAApB;AACH;AACJ;;AAAA;AACJ,GAbQ,EAaN,CAACP,QAAD,EAAWV,QAAQ,CAACY,GAApB,EAAyBR,IAAzB,CAbM,CAAT;;AAcA,QAAMc,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF,GADyB,CAEzB;;AACA,QAAIhC,QAAQ,KAAKE,eAAjB,EAAkC;AAC9B+B,MAAAA,KAAK,CAAC,+CAAD,CAAL;AACH,KAFD,MAEO;AACHX,MAAAA,QAAQ,CAAC/B,iBAAiB,CAAC;AAAE2C,QAAAA,MAAM,EAAElB,IAAI,CAACQ,GAAf;AAAoB5B,QAAAA,IAApB;AAA0BE,QAAAA,KAA1B;AAAiCE,QAAAA,QAAjC;AAC3BI,QAAAA,UAD2B;AACfE,QAAAA,UADe;AACHE,QAAAA;AADG,OAAD,CAAlB,CAAR;AAEH;AACJ,GATD;;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAE2B,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL,CADJ,EAEKrB,OAAO,gBAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACJC,KAAK,gBAAI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CAAJ,gBACD,0CACKM,aAAa,iBAAI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtB,EAEKD,WAAW,iBAAI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,WAA9B,CAFpB,EAGKD,aAAa,iBAAK,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHvB,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,IAAA,EAAE,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,WAAW,EAAC,YAAzC;AAAsD,IAAA,KAAK,EAAEvB,IAA7D;AAAmE,IAAA,QAAQ,EAAGmC,CAAD,IAAOlC,OAAO,CAACkC,CAAC,CAACK,MAAF,CAASC,KAAV,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAO,IAAA,EAAE,EAAC,OAAV;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,WAAW,EAAC,aAA1C;AAAwD,IAAA,KAAK,EAAEvC,KAA/D;AAAsE,IAAA,QAAQ,EAAGiC,CAAD,IAAOhC,QAAQ,CAACgC,CAAC,CAACK,MAAF,CAASC,KAAV,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CARJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,WAAW,EAAC,gBAA7C;AAA8D,IAAA,KAAK,EAAErC,QAArE;AAA+E,IAAA,QAAQ,EAAG+B,CAAD,IAAO9B,WAAW,CAAC8B,CAAC,CAACK,MAAF,CAASC,KAAV,CAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAZJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,IAAA,EAAE,EAAC,iBAAV;AAA4B,IAAA,IAAI,EAAC,MAAjC;AAAwC,IAAA,WAAW,EAAC,uBAApD;AAA4E,IAAA,QAAQ,EAAGN,CAAD,IAAO5B,kBAAkB,CAAC4B,CAAC,CAACK,MAAF,CAASC,KAAV,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAhBJ,EAqBQrB,IAAI,CAACsB,QAAL,iBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAO,IAAA,EAAE,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,WAAW,EAAC,mBAA/C;AACI,IAAA,KAAK,EAAElC,UADX;AACuB,IAAA,QAAQ,EAAG2B,CAAD,IAAOQ,aAAa,CAACR,CAAC,CAACK,MAAF,CAASC,KAAV,CADrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAO,IAAA,EAAE,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,WAAW,EAAC,mBAA/C;AACI,IAAA,KAAK,EAAE/B,UADX;AACuB,IAAA,QAAQ,EAAGyB,CAAD,IAAOxB,aAAa,CAACwB,CAAC,CAACK,MAAF,CAASC,KAAV,CADrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAPJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,eAEI;AAAO,IAAA,EAAE,EAAC,mBAAV;AAA8B,IAAA,IAAI,EAAC,MAAnC;AAA0C,IAAA,WAAW,EAAC,0BAAtD;AACI,IAAA,KAAK,EAAE7B,iBADX;AAC8B,IAAA,QAAQ,EAAGuB,CAAD,IAAOtB,oBAAoB,CAACsB,CAAC,CAACK,MAAF,CAASC,KAAV,CADnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAZJ,CAtBZ,eA0CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CA1CJ,CAJZ,CADJ,CADJ;AA2DH;;AAED,eAAe1C,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nfunction ProfileScreen() {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [sellerName, setsellerName] = useState('')\n    const [sellerLogo, setSellerLogo] = useState('')\n    const [sellerDescription, setSellerDescription] = useState('')\n\n    const userSignin = useSelector((state) => state.userSignin)\n    const { userInfo } = userSignin;\n    const userDetails = useSelector((state) => state.userDetails)\n    const { loading, error, user } = userDetails\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n    const { success: successUpdate, error: errorUpdate, loading: loadingUpdate } = userUpdateProfile\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (!user) {\n            dispatch({ type: USER_UPDATE_PROFILE_RESET })\n            dispatch(detailsUser(userInfo._id));\n        } else {\n            setName(user.name);\n            setEmail(user.email)\n            if(user.seller){\n                setsellerName(user.seller.name)\n                setsellerLogo(user.seller.logo)\n                setsellerDescription(user.seller.description)\n            }\n        };\n    }, [dispatch, userInfo._id, user])\n    const submitHandler = (e) => {\n        e.preventDefault();\n        //dispatch\n        if (password !== confirmPassword) {\n            alert('Password and Confirm Password Are Not Matched');\n        } else {\n            dispatch(updateUserProfile({ userId: user._id, name, email, password, \n            sellerName, sellerLogo, sellerDescription}))\n        }\n    };\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submithandler}>\n                <div><h1>User Profile</h1></div>\n                {loading ? <LoadingBox></LoadingBox> :\n                    error ? (<MessageBox variant=\"danger\">{error}</MessageBox>) : (\n                        <>\n                            {loadingUpdate && <LoadingBox></LoadingBox>}\n                            {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n                            {successUpdate && (<MessageBox variant=\"success\">Profile Updated Succesfully</MessageBox>)}\n                            <div>\n                                <label htmlFor=\"name\">Name</label>\n                                <input id=\"name\" type=\"text\" placeholder=\"Enter name\" value={name} onChange={(e) => setName(e.target.value)}></input>\n                            </div>\n                            <div>\n                                <label htmlFor=\"email\">Email</label>\n                                <input id=\"email\" type=\"text\" placeholder=\"Enter email\" value={email} onChange={(e) => setEmail(e.target.value)}></input>\n                            </div>\n                            <div>\n                                <label htmlFor=\"password\">Password</label>\n                                <input id=\"password\" type=\"text\" placeholder=\"Enter password\" value={password} onChange={(e) => setPassword(e.target.value)}></input>\n                            </div>\n                            <div>\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                                <input id=\"confirmPassword\" type=\"text\" placeholder=\"Enter confirmPassword\" onChange={(e) => setConfirmPassword(e.target.value)}></input>\n                            </div>\n                            {\n                                user.isSeller && (\n                                    <>\n                                        <h2>Seller</h2>\n                                        <div>\n                                            <label htmlFor=\"sellerName\">Seller Name</label>\n                                            <input id=\"sellerName\" type=\"text\" placeholder=\"Enter Seller Name\"\n                                                value={sellerName} onChange={(e) => setSellerName(e.target.value)}></input>\n                                        </div>\n                                        <div>\n                                            <label htmlFor=\"sellerLogo\">Seller Logo</label>\n                                            <input id=\"sellerLogo\" type=\"text\" placeholder=\"Enter Seller Logo\"\n                                                value={sellerLogo} onChange={(e) => setSellerLogo(e.target.value)}></input>\n                                        </div>\n                                        <div>\n                                            <label htmlFor=\"sellerDescription\">Seller Description of Product</label>\n                                            <input id=\"sellerDescription\" type=\"text\" placeholder=\"Enter Seller Description\"\n                                                value={sellerDescription} onChange={(e) => setSellerDescription(e.target.value)}></input>\n                                        </div>\n                                    </>\n                                )\n                            }\n                            <div>\n                                <label />\n                                <button className=\"primary\" type=\"submit\">Update</button>\n                            </div>\n\n\n\n                        </>)}\n            </form>\n        </div>\n    )\n}\n\nexport default ProfileScreen\n"]},"metadata":{},"sourceType":"module"}