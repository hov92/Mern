{"ast":null,"code":"import Axios from 'axios';\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL, PRODUCT_REVIEW_CREATE_REQUEST, PRODUCT_REVIEW_CREATE_SUCCESS, PRODUCT_REVIEW_CREATE_FAIL } from '../constants/productConstants';\nexport const listProducts = ({\n  pageNumber = '',\n  seller = '',\n  name = '',\n  category = '',\n  order = '',\n  min = 0,\n  max = 0,\n  rating = 0\n}) => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n}; // export const listProductCategories = () => async (dispatch) => {\n//     dispatch({\n//         type: PRODUCT_CATEGORY_LIST_REQUEST,\n//     });\n//     try {\n//         const { data } = await Axios.get(`/api/products/categories`);\n//         dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\n//     } catch (error) {\n//         dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\n//     }\n// };\n// export const detailsProduct = (productId) => async (dispatch) => {\n//     dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n//     try {\n//         const { data } = await Axios.get(`/api/products/${productId}`);\n//         dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n//     } catch (error) {\n//         dispatch({\n//             type: PRODUCT_DETAILS_FAIL,\n//             payload:\n//                 error.response && error.response.data.message\n//                     ? error.response.data.message\n//                     : error.message,\n//         });\n//     }\n// };\n\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createReview = (productId, review) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_REVIEW_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/Mern/mern/client/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_FAIL","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","PRODUCT_REVIEW_CREATE_FAIL","listProducts","pageNumber","seller","name","category","order","min","max","rating","dispatch","type","data","get","payload","error","message","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","response","updateProduct","put","_id","deleteProduct","productId","delete","createReview","review"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport {\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_CATEGORY_LIST_SUCCESS,\n    PRODUCT_CATEGORY_LIST_REQUEST,\n    PRODUCT_CATEGORY_LIST_FAIL,\n    PRODUCT_REVIEW_CREATE_REQUEST,\n    PRODUCT_REVIEW_CREATE_SUCCESS,\n    PRODUCT_REVIEW_CREATE_FAIL,\n} from '../constants/productConstants';\n\nexport const listProducts = ({\n    pageNumber = '',\n    seller = '',\n    name = '',\n    category = '',\n    order = '',\n    min = 0,\n    max = 0,\n    rating = 0,\n}) => async (dispatch) => {\n    dispatch({\n        type: PRODUCT_LIST_REQUEST,\n    });\n    try {\n        const { data } = await Axios.get(\n            `/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`\n        );\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n};\n\n// export const listProductCategories = () => async (dispatch) => {\n//     dispatch({\n//         type: PRODUCT_CATEGORY_LIST_REQUEST,\n//     });\n//     try {\n//         const { data } = await Axios.get(`/api/products/categories`);\n//         dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\n//     } catch (error) {\n//         dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\n//     }\n// };\n\n// export const detailsProduct = (productId) => async (dispatch) => {\n//     dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n//     try {\n//         const { data } = await Axios.get(`/api/products/${productId}`);\n//         dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n//     } catch (error) {\n//         dispatch({\n//             type: PRODUCT_DETAILS_FAIL,\n//             payload:\n//                 error.response && error.response.data.message\n//                     ? error.response.data.message\n//                     : error.message,\n//         });\n//     }\n// };\nexport const createProduct = () => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.post(\n            '/api/products',\n            {},\n            {\n                headers: { Authorization: `Bearer ${userInfo.token}` },\n            }\n        );\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data.product,\n        });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\n    }\n};\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.put(`/api/products/${product._id}`, product, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\n    }\n};\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = Axios.delete(`/api/products/${productId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: PRODUCT_DELETE_SUCCESS });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\n    }\n};\nexport const createReview = (productId, review) => async (\n    dispatch,\n    getState\n) => {\n    dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.post(\n            `/api/products/${productId}/reviews`,\n            review,\n            {\n                headers: { Authorization: `Bearer ${userInfo.token}` },\n            }\n        );\n        dispatch({\n            type: PRODUCT_REVIEW_CREATE_SUCCESS,\n            payload: data.review,\n        });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\n    }\n};"]},"metadata":{},"sourceType":"module"}