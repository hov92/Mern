{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{deleteOrder,listOrders}from'../actions/orderActions';import LoadingBox from'../components/LoadingBox';import MessageBox from'../components/MessageBox';import{ORDER_DELETE_RESET}from'../constants/orderConstants';function OrderListScreen(props){var sellerMode=props.match.path.indexOf('/seller')>=0;var orderList=useSelector(function(state){return state.orderList;});var loading=orderList.loading,error=orderList.error,orders=orderList.orders;var orderDelete=useSelector(function(state){return state.orderDelete;});var loadingDelete=orderDelete.loading,errorDelete=orderDelete.error,successDelete=orderDelete.success;var userSignin=useSelector(function(state){return state.userSignin;});var userInfo=userSignin.userInfo;var dispatch=useDispatch();useEffect(function(){dispatch({type:ORDER_DELETE_RESET});dispatch(listOrders({seller:sellerMode?userInfo._id:''}));},[dispatch,sellerMode,successDelete,userInfo._id]);var deleteHandler=function deleteHandler(order){if(window.confirm('Are you sure to delete?')){dispatch(deleteOrder(order._id));}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Orders\"),loadingDelete&&/*#__PURE__*/React.createElement(LoadingBox,null),errorDelete&&/*#__PURE__*/React.createElement(MessageBox,{variant:\"danger\"},errorDelete),loading?/*#__PURE__*/React.createElement(LoadingBox,null):error?/*#__PURE__*/React.createElement(MessageBox,{variant:\"danger\"},error):/*#__PURE__*/React.createElement(\"table\",{className:\"table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"ID\"),/*#__PURE__*/React.createElement(\"th\",null,\"USER\"),/*#__PURE__*/React.createElement(\"th\",null,\"DATE\"),/*#__PURE__*/React.createElement(\"th\",null,\"TOTAL\"),/*#__PURE__*/React.createElement(\"th\",null,\"PAID\"),/*#__PURE__*/React.createElement(\"th\",null,\"DELIVERED\"),/*#__PURE__*/React.createElement(\"th\",null,\"ACTIONS\"))),/*#__PURE__*/React.createElement(\"tbody\",null,orders.map(function(order){return/*#__PURE__*/React.createElement(\"tr\",{key:order._id},/*#__PURE__*/React.createElement(\"td\",null,order._id),/*#__PURE__*/React.createElement(\"td\",null,order.user.name),/*#__PURE__*/React.createElement(\"td\",null,order.createdAt.substring(0,10)),/*#__PURE__*/React.createElement(\"td\",null,order.totalPrice.toFixed(2)),/*#__PURE__*/React.createElement(\"td\",null,order.isPaid?order.paidAt.substring(0,10):'No'),/*#__PURE__*/React.createElement(\"td\",null,order.isDelivered?order.deliveredAt.substring(0,10):'No'),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"small\",onClick:function onClick(){props.history.push(\"/order/\".concat(order._id));}},\"Details\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"small\",onClick:function onClick(){return deleteHandler(order);}},\"Delete\")));}))));}export default OrderListScreen;","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/Mern/mern/client/src/screens/OrderListScreen.js"],"names":["React","useEffect","useDispatch","useSelector","deleteOrder","listOrders","LoadingBox","MessageBox","ORDER_DELETE_RESET","OrderListScreen","props","sellerMode","match","path","indexOf","orderList","state","loading","error","orders","orderDelete","loadingDelete","errorDelete","successDelete","success","userSignin","userInfo","dispatch","type","seller","_id","deleteHandler","order","window","confirm","map","user","name","createdAt","substring","totalPrice","toFixed","isPaid","paidAt","isDelivered","deliveredAt","history","push"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteOrder, listOrders } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_DELETE_RESET } from '../constants/orderConstants';\n\nfunction OrderListScreen(props) {\n    const sellerMode = props.match.path.indexOf('/seller') >= 0;\n    const orderList = useSelector((state) => state.orderList);\n    const { loading, error, orders } = orderList;\n    const orderDelete = useSelector((state) => state.orderDelete);\n    const {\n        loading: loadingDelete,\n        error: errorDelete,\n        success: successDelete,\n    } = orderDelete;\n\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch({ type: ORDER_DELETE_RESET });\n        dispatch(listOrders({ seller: sellerMode ? userInfo._id : '' }));\n    }, [dispatch, sellerMode, successDelete, userInfo._id]);\n    const deleteHandler = (order) => {\n        if (window.confirm('Are you sure to delete?')) {\n            dispatch(deleteOrder(order._id));\n        }\n    };\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loadingDelete && <LoadingBox></LoadingBox>}\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\n            {loading ? (\n                <LoadingBox></LoadingBox>\n            ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>TOTAL</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th>ACTIONS</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {orders.map((order) => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>{order.totalPrice.toFixed(2)}</td>\n                                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\n                                        <td>\n                                            {order.isDelivered\n                                                ? order.deliveredAt.substring(0, 10)\n                                                : 'No'}\n                                        </td>\n                                        <td>\n                                            <button\n                                                type=\"button\"\n                                                className=\"small\"\n                                                onClick={() => {\n                                                    props.history.push(`/order/${order._id}`);\n                                                }}\n                                            >\n                                                Details\n                  </button>\n                                            <button\n                                                type=\"button\"\n                                                className=\"small\"\n                                                onClick={() => deleteHandler(order)}\n                                            >\n                                                Delete\n                  </button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    )}\n        </div>\n    );\n}\n\nexport default OrderListScreen"]},"metadata":{},"sourceType":"module"}