{"ast":null,"code":"import Axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_SUMMARY_REQUEST, ORDER_SUMMARY_SUCCESS } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResults) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/mine`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_MINE_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = ({\n  seller = ''\n}) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders?seller=${seller}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(data);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELETE_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deliverOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELIVER_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/orders/${orderId}/deliver`, {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message\n    });\n  }\n};\nexport const summaryOrder = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_SUMMARY_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders/summary', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_SUMMARY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/Mern/mern/client/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_MINE_LIST_FAIL","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_SUMMARY_REQUEST","ORDER_SUMMARY_SUCCESS","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResults","paymentResult","put","_id","listOrderMine","listOrders","seller","console","log","deleteOrder","delete","deliverOrder","summaryOrder"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_SUMMARY_REQUEST, ORDER_SUMMARY_SUCCESS } from \"../constants/orderConstants\"\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n    try {\n        const { userSignin: { userInfo } } = getState()\n        const { data } = await Axios.post('/api/orders', order, {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        })\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\n        dispatch({ type: CART_EMPTY })\n        localStorage.removeItem('cartItems')\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n\n}\n\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n    const { userSignin: { userInfo } } = getState()\n\n    try {\n        const { data } = await Axios.get(`/api/orders/${orderId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message })\n    }\n}\n\nexport const payOrder = (order, paymentResults) => async(dispatch, getState) => {\n    dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n    const { userSignin: { userInfo } } = getState()\n\n    try {\n        const { data } = await Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({ type: ORDER_PAY_FAIL, payload: message })\n    }\n\n}\n\nexport const listOrderMine = () => async (dispatch, getState) => {\n    dispatch({ type: ORDER_MINE_LIST_REQUEST });\n    const { userSignin: { userInfo } } = getState();\n    try {\n        const { data } = await Axios.get(`/api/orders/mine`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message })\n\n    }\n}\n\nexport const listOrders = ({ seller = '' }) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_LIST_REQUEST });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.get(`/api/orders?seller=${seller}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        console.log(data);\n        dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: ORDER_LIST_FAIL, payload: message });\n    }\n};\nexport const deleteOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = Axios.delete(`/api/orders/${orderId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: ORDER_DELETE_FAIL, payload: message });\n    }\n};\n\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DELIVER_REQUEST, payload: orderId });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = Axios.put(\n            `/api/orders/${orderId}/deliver`,\n            {},\n            {\n                headers: { Authorization: `Bearer ${userInfo.token}` },\n            }\n        );\n        dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n    }\n};\n\nexport const summaryOrder = () => async (dispatch, getState) => {\n    dispatch({ type: ORDER_SUMMARY_REQUEST });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.get('/api/orders/summary', {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}