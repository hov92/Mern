{"ast":null,"code":"var _jsxFileName = \"/Users/dwaynehovington/Desktop/Mern/mern/client/src/screens/ProfileScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nfunction ProfileScreen() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = userUpdateProfile;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_RESET\n      });\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n    }\n\n    ;\n  }, [dispatch, userInfo._id, user]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //dispatch\n\n    if (password !== confirmPassword) {\n      alert('Password and Confirm Password Are Not Matched');\n    } else {\n      dispatch(updateUserProfile({\n        userId: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submithandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }\n  }, \"User Profile\")), loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, error) : /*#__PURE__*/React.createElement(React.Fragment, null, loadingUpdate && /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 35\n    }\n  }), errorUpdate && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, errorUpdate), successUpdate && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 36\n    }\n  }, \"Profile Updated Succesfully\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"text\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"text\",\n    placeholder: \"Enter password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"confirmPassword\",\n    type: \"text\",\n    placeholder: \"Enter confirmPassword\",\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Update\")))));\n}\n\nexport default ProfileScreen;","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/Mern/mern/client/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","success","successUpdate","errorUpdate","loadingUpdate","dispatch","type","_id","submitHandler","e","preventDefault","alert","userId","submithandler","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nfunction ProfileScreen() {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const userSignin = useSelector((state) => state.userSignin)\n    const { userInfo } = userSignin;\n    const userDetails = useSelector((state) => state.userDetails)\n    const { loading, error, user } = userDetails\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n    const {success: successUpdate, error: errorUpdate, loading: loadingUpdate} = userUpdateProfile\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if(!user){\n            dispatch({type: USER_UPDATE_PROFILE_RESET})\n            dispatch(detailsUser(userInfo._id));\n        }else{\n            setName(user.name);\n            setEmail(user.email)\n        };\n    }, [dispatch, userInfo._id, user])\n    const submitHandler = (e) => {\n        e.preventDefault();\n        //dispatch\n        if(password !== confirmPassword){\n            alert('Password and Confirm Password Are Not Matched');\n        } else{\n            dispatch(updateUserProfile({ userId: user._id, name, email, password}))\n        }\n    };\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submithandler}>\n                <div><h1>User Profile</h1></div>\n                {loading? <LoadingBox></LoadingBox>:\n                error? (<MessageBox variant=\"danger\">{error}</MessageBox>):(\n                <>\n                {loadingUpdate && <LoadingBox></LoadingBox>}\n                {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n                {successUpdate && (<MessageBox variant=\"success\">Profile Updated Succesfully</MessageBox>)}\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <input id=\"name\" type=\"text\" placeholder=\"Enter name\" value={name} onChange={(e)=> setName(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input id=\"email\" type=\"text\" placeholder=\"Enter email\" value={email} onChange={(e)=> setEmail(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input id=\"password\" type=\"text\" placeholder=\"Enter password\" value={password} onChange={(e)=> setPassword(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                    <input id=\"confirmPassword\" type=\"text\" placeholder=\"Enter confirmPassword\" onChange={(e)=> setConfirmPassword(e.target.value)}></input>\n                </div>\n                <div>\n                    <label />\n                    <button className=\"primary\" type=\"submit\">Update</button>\n                </div>\n\n\n\n                </>)}\n            </form>\n        </div>\n    )\n}\n\nexport default ProfileScreen\n"]},"metadata":{},"sourceType":"module"}