{"ast":null,"code":"import { CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: [...state.cartItems]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/Mern/mern/client/src/reducers/cartReducers.js"],"names":["CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","CART_ADD_ITEM","item","payload","existItem","find","x","product","map"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,4BAAjC;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,aAAL;AACI,YAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB;AACA,YAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB;;AACA,UAAIH,SAAJ,EAAe;AACX,eAAO,EACH,GAAGP,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAAlE;AAFR,SAAP;AAIH,OALD,MAKM;AACF,eAAO,EAAC,GAAGT,KAAJ;AAAWC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAAtB,SAAP;AACH;;AAEL,SAAKP,gBAAL;AACI,aAAM,EAAC,GAAGE,KAAJ;AAAWC,QAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV;AAAtB,OAAN;;AAEJ;AACI,aAAOD,KAAP;AAjBR;AAmBH,CApBM","sourcesContent":["import { CART_REMOVE_ITEM } from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product);\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n                }\n            } else{\n                return {...state, cartItems: [...state.cartItems, item]};\n            }\n\n        case CART_REMOVE_ITEM:\n            return{...state, cartItems: [...state.cartItems]}    \n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}