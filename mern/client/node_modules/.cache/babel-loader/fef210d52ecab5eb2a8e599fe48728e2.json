{"ast":null,"code":"import _slicedToArray from\"/Users/dwaynehovington/Desktop/Mern/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{detailsUser,updateUserProfile}from'../actions/userActions';import LoadingBox from'../components/LoadingBox';import MessageBox from'../components/MessageBox';import{USER_UPDATE_PROFILE_RESET}from'../constants/userConstants';function ProfileScreen(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),sellerName=_useState10[0],setSellerName=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),sellerLogo=_useState12[0],setSellerLogo=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),sellerDescription=_useState14[0],setSellerDescription=_useState14[1];var userSignin=useSelector(function(state){return state.userSignin;});var userInfo=userSignin.userInfo;var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdateProfile=useSelector(function(state){return state.userUpdateProfile;});var successUpdate=userUpdateProfile.success,errorUpdate=userUpdateProfile.error,loadingUpdate=userUpdateProfile.loading;var dispatch=useDispatch();useEffect(function(){if(!user){dispatch({type:USER_UPDATE_PROFILE_RESET});dispatch(detailsUser(userInfo._id));}else{setName(user.name);setEmail(user.email);if(user.seller){setSellerName(user.seller.name);setSellerLogo(user.seller.logo);setSellerDescription(user.seller.description);}}},[dispatch,userInfo._id,user]);var submitHandler=function submitHandler(e){e.preventDefault();// dispatch update profile\nif(password!==confirmPassword){alert('Password and Confirm Password Are Not Matched');}else{dispatch(updateUserProfile({userId:user._id,name:name,email:email,password:password,sellerName:sellerName,sellerLogo:sellerLogo,sellerDescription:sellerDescription}));}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{className:\"form\",onSubmit:submitHandler},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"User Profile\")),loading?/*#__PURE__*/React.createElement(LoadingBox,null):error?/*#__PURE__*/React.createElement(MessageBox,{variant:\"danger\"},error):/*#__PURE__*/React.createElement(React.Fragment,null,loadingUpdate&&/*#__PURE__*/React.createElement(LoadingBox,null),errorUpdate&&/*#__PURE__*/React.createElement(MessageBox,{variant:\"danger\"},errorUpdate),successUpdate&&/*#__PURE__*/React.createElement(MessageBox,{variant:\"success\"},\"Profile Updated Successfully\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(\"input\",{id:\"name\",type:\"text\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(\"input\",{id:\"email\",type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{id:\"password\",type:\"password\",placeholder:\"Enter password\",onChange:function onChange(e){return setPassword(e.target.value);}})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"confirmPassword\"},\"confirm Password\"),/*#__PURE__*/React.createElement(\"input\",{id:\"confirmPassword\",type:\"password\",placeholder:\"Enter confirm password\",onChange:function onChange(e){return setConfirmPassword(e.target.value);}})),user.isSeller&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Seller\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"sellerName\"},\"Seller Name\"),/*#__PURE__*/React.createElement(\"input\",{id:\"sellerName\",type:\"text\",placeholder:\"Enter Seller Name\",value:sellerName,onChange:function onChange(e){return setSellerName(e.target.value);}})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"sellerLogo\"},\"Seller Logo\"),/*#__PURE__*/React.createElement(\"input\",{id:\"sellerLogo\",type:\"text\",placeholder:\"Enter Seller Logo\",value:sellerLogo,onChange:function onChange(e){return setSellerLogo(e.target.value);}})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"sellerDescription\"},\"Seller Description\"),/*#__PURE__*/React.createElement(\"input\",{id:\"sellerDescription\",type:\"text\",placeholder:\"Enter Seller Description\",value:sellerDescription,onChange:function onChange(e){return setSellerDescription(e.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null),/*#__PURE__*/React.createElement(\"button\",{className:\"primary\",type:\"submit\"},\"Update\")))));}export default ProfileScreen;","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/Mern/mern/client/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","sellerName","setSellerName","sellerLogo","setSellerLogo","sellerDescription","setSellerDescription","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","successUpdate","success","errorUpdate","loadingUpdate","dispatch","type","_id","seller","logo","description","submitHandler","e","preventDefault","alert","userId","target","value","isSeller"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nfunction ProfileScreen() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [sellerName, setSellerName] = useState('');\n    const [sellerLogo, setSellerLogo] = useState('');\n    const [sellerDescription, setSellerDescription] = useState('');\n\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n    const {\n        success: successUpdate,\n        error: errorUpdate,\n        loading: loadingUpdate,\n    } = userUpdateProfile;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (!user) {\n            dispatch({ type: USER_UPDATE_PROFILE_RESET });\n            dispatch(detailsUser(userInfo._id));\n        } else {\n            setName(user.name);\n            setEmail(user.email);\n            if (user.seller) {\n                setSellerName(user.seller.name);\n                setSellerLogo(user.seller.logo);\n                setSellerDescription(user.seller.description);\n            }\n        }\n    }, [dispatch, userInfo._id, user]);\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // dispatch update profile\n        if (password !== confirmPassword) {\n            alert('Password and Confirm Password Are Not Matched');\n        } else {\n            dispatch(\n                updateUserProfile({\n                    userId: user._id,\n                    name,\n                    email,\n                    password,\n                    sellerName,\n                    sellerLogo,\n                    sellerDescription,\n                })\n            );\n        }\n    };\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>User Profile</h1>\n                </div>\n                {loading ? (\n                    <LoadingBox></LoadingBox>\n                ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                ) : (\n                            <>\n                                {loadingUpdate && <LoadingBox></LoadingBox>}\n                                {errorUpdate && (\n                                    <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\n                                )}\n                                {successUpdate && (\n                                    <MessageBox variant=\"success\">\n                                        Profile Updated Successfully\n                                    </MessageBox>\n                                )}\n                                <div>\n                                    <label htmlFor=\"name\">Name</label>\n                                    <input\n                                        id=\"name\"\n                                        type=\"text\"\n                                        placeholder=\"Enter name\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    ></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"email\">Email</label>\n                                    <input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter email\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    ></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"password\">Password</label>\n                                    <input\n                                        id=\"password\"\n                                        type=\"password\"\n                                        placeholder=\"Enter password\"\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    ></input>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"confirmPassword\">confirm Password</label>\n                                    <input\n                                        id=\"confirmPassword\"\n                                        type=\"password\"\n                                        placeholder=\"Enter confirm password\"\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                    ></input>\n                                </div>\n                                {user.isSeller && (\n                                    <>\n                                        <h2>Seller</h2>\n                                        <div>\n                                            <label htmlFor=\"sellerName\">Seller Name</label>\n                                            <input\n                                                id=\"sellerName\"\n                                                type=\"text\"\n                                                placeholder=\"Enter Seller Name\"\n                                                value={sellerName}\n                                                onChange={(e) => setSellerName(e.target.value)}\n                                            ></input>\n                                        </div>\n                                        <div>\n                                            <label htmlFor=\"sellerLogo\">Seller Logo</label>\n                                            <input\n                                                id=\"sellerLogo\"\n                                                type=\"text\"\n                                                placeholder=\"Enter Seller Logo\"\n                                                value={sellerLogo}\n                                                onChange={(e) => setSellerLogo(e.target.value)}\n                                            ></input>\n                                        </div>\n                                        <div>\n                                            <label htmlFor=\"sellerDescription\">Seller Description</label>\n                                            <input\n                                                id=\"sellerDescription\"\n                                                type=\"text\"\n                                                placeholder=\"Enter Seller Description\"\n                                                value={sellerDescription}\n                                                onChange={(e) => setSellerDescription(e.target.value)}\n                                            ></input>\n                                        </div>\n                                    </>\n                                )}\n                                <div>\n                                    <label />\n                                    <button className=\"primary\" type=\"submit\">\n                                        Update\n              </button>\n                                </div>\n                            </>\n                        )}\n            </form>\n        </div>\n    );\n}\n\nexport default ProfileScreen"]},"metadata":{},"sourceType":"module"}