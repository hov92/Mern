{"ast":null,"code":"import _objectSpread from\"/Users/dwaynehovington/Desktop/Mern/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/dwaynehovington/Desktop/Mern/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/dwaynehovington/Desktop/Mern/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import socketIOClient from'socket.io-client';import{useSelector}from'react-redux';import MessageBox from'../components/MessageBox';var allUsers=[];var allMessages=[];var allSelectedUser={};var ENDPOINT=window.location.host.indexOf('localhost')>=0?'http://127.0.0.1:5000':window.location.host;export default function SupportScreen(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),selectedUser=_useState2[0],setSelectedUser=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),socket=_useState4[0],setSocket=_useState4[1];var uiMessagesRef=useRef(null);var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),messageBody=_useState6[0],setMessageBody=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),messages=_useState8[0],setMessages=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),users=_useState10[0],setUsers=_useState10[1];var userSignin=useSelector(function(state){return state.userSignin;});var userInfo=userSignin.userInfo;useEffect(function(){if(uiMessagesRef.current){uiMessagesRef.current.scrollBy({top:uiMessagesRef.current.clientHeight,left:0,behavior:'smooth'});}if(!socket){var sk=socketIOClient(ENDPOINT);setSocket(sk);sk.emit('onLogin',{_id:userInfo._id,name:userInfo.name,isAdmin:userInfo.isAdmin});sk.on('message',function(data){if(allSelectedUser._id===data._id){allMessages=[].concat(_toConsumableArray(allMessages),[data]);}else{var existUser=allUsers.find(function(user){return user._id===data._id;});if(existUser){allUsers=allUsers.map(function(user){return user._id===existUser._id?_objectSpread(_objectSpread({},user),{},{unread:true}):user;});setUsers(allUsers);}}setMessages(allMessages);});sk.on('updateUser',function(updatedUser){var existUser=allUsers.find(function(user){return user._id===updatedUser._id;});if(existUser){allUsers=allUsers.map(function(user){return user._id===existUser._id?updatedUser:user;});setUsers(allUsers);}else{allUsers=[].concat(_toConsumableArray(allUsers),[updatedUser]);setUsers(allUsers);}});sk.on('listUsers',function(updatedUsers){allUsers=updatedUsers;setUsers(allUsers);});sk.on('selectUser',function(user){allMessages=user.messages;setMessages(allMessages);});}},[messages,socket,users,userInfo._id,userInfo.isAdmin,userInfo.name]);var selectUser=function selectUser(user){allSelectedUser=user;setSelectedUser(allSelectedUser);var existUser=allUsers.find(function(x){return x._id===user._id;});if(existUser){allUsers=allUsers.map(function(x){return x._id===existUser._id?_objectSpread(_objectSpread({},x),{},{unread:false}):x;});setUsers(allUsers);}socket.emit('onUserSelected',user);};var submitHandler=function submitHandler(e){e.preventDefault();if(!messageBody.trim()){alert('Error. Please type message.');}else{allMessages=[].concat(_toConsumableArray(allMessages),[{body:messageBody,name:userInfo.name}]);setMessages(allMessages);setMessageBody('');setTimeout(function(){socket.emit('onMessage',{body:messageBody,name:userInfo.name,isAdmin:userInfo.isAdmin,_id:selectedUser._id});},1000);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"row top full-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-1 support-users\"},users.filter(function(x){return x._id!==userInfo._id;}).length===0&&/*#__PURE__*/React.createElement(MessageBox,null,\"No Online User Found\"),/*#__PURE__*/React.createElement(\"ul\",null,users.filter(function(x){return x._id!==userInfo._id;}).map(function(user){return/*#__PURE__*/React.createElement(\"li\",{key:user._id,className:user._id===selectedUser._id?'  selected':'  '},/*#__PURE__*/React.createElement(\"button\",{className:\"block\",type:\"button\",onClick:function onClick(){return selectUser(user);}},user.name),/*#__PURE__*/React.createElement(\"span\",{className:user.unread?'unread':user.online?'online':'offline'}));}))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-3 support-messages\"},!selectedUser._id?/*#__PURE__*/React.createElement(MessageBox,null,\"Select a user to start chat\"):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Chat with \",selectedUser.name,\" \")),/*#__PURE__*/React.createElement(\"ul\",{ref:uiMessagesRef},messages.length===0&&/*#__PURE__*/React.createElement(\"li\",null,\"No message.\"),messages.map(function(msg,index){return/*#__PURE__*/React.createElement(\"li\",{key:index},/*#__PURE__*/React.createElement(\"strong\",null,\"\".concat(msg.name,\": \")),\" \",msg.body);})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:submitHandler,className:\"row\"},/*#__PURE__*/React.createElement(\"input\",{value:messageBody,onChange:function onChange(e){return setMessageBody(e.target.value);},type:\"text\",placeholder:\"type message\"}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Send\"))))));}","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/Mern/mern/client/src/screens/SupportScreen.js"],"names":["React","useEffect","useRef","useState","socketIOClient","useSelector","MessageBox","allUsers","allMessages","allSelectedUser","ENDPOINT","window","location","host","indexOf","SupportScreen","selectedUser","setSelectedUser","socket","setSocket","uiMessagesRef","messageBody","setMessageBody","messages","setMessages","users","setUsers","userSignin","state","userInfo","current","scrollBy","top","clientHeight","left","behavior","sk","emit","_id","name","isAdmin","on","data","existUser","find","user","map","unread","updatedUser","updatedUsers","selectUser","x","submitHandler","e","preventDefault","trim","alert","body","setTimeout","filter","length","online","msg","index","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport MessageBox from '../components/MessageBox';\n\nlet allUsers = [];\nlet allMessages = [];\nlet allSelectedUser = {};\nconst ENDPOINT =\n    window.location.host.indexOf('localhost') >= 0\n        ? 'http://127.0.0.1:5000'\n        : window.location.host;\n\nexport default function SupportScreen() {\n    const [selectedUser, setSelectedUser] = useState({});\n    const [socket, setSocket] = useState(null);\n    const uiMessagesRef = useRef(null);\n    const [messageBody, setMessageBody] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [users, setUsers] = useState([]);\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n\n    useEffect(() => {\n        if (uiMessagesRef.current) {\n            uiMessagesRef.current.scrollBy({\n                top: uiMessagesRef.current.clientHeight,\n                left: 0,\n                behavior: 'smooth',\n            });\n        }\n\n        if (!socket) {\n            const sk = socketIOClient(ENDPOINT);\n            setSocket(sk);\n            sk.emit('onLogin', {\n                _id: userInfo._id,\n                name: userInfo.name,\n                isAdmin: userInfo.isAdmin,\n            });\n            sk.on('message', (data) => {\n                if (allSelectedUser._id === data._id) {\n                    allMessages = [...allMessages, data];\n                } else {\n                    const existUser = allUsers.find((user) => user._id === data._id);\n                    if (existUser) {\n                        allUsers = allUsers.map((user) =>\n                            user._id === existUser._id ? { ...user, unread: true } : user\n                        );\n                        setUsers(allUsers);\n                    }\n                }\n                setMessages(allMessages);\n            });\n            sk.on('updateUser', (updatedUser) => {\n                const existUser = allUsers.find((user) => user._id === updatedUser._id);\n                if (existUser) {\n                    allUsers = allUsers.map((user) =>\n                        user._id === existUser._id ? updatedUser : user\n                    );\n                    setUsers(allUsers);\n                } else {\n                    allUsers = [...allUsers, updatedUser];\n                    setUsers(allUsers);\n                }\n            });\n            sk.on('listUsers', (updatedUsers) => {\n                allUsers = updatedUsers;\n                setUsers(allUsers);\n            });\n            sk.on('selectUser', (user) => {\n                allMessages = user.messages;\n                setMessages(allMessages);\n            });\n        }\n    }, [messages, socket, users, userInfo._id, userInfo.isAdmin, userInfo.name]);\n\n    const selectUser = (user) => {\n        allSelectedUser = user;\n        setSelectedUser(allSelectedUser);\n        const existUser = allUsers.find((x) => x._id === user._id);\n        if (existUser) {\n            allUsers = allUsers.map((x) =>\n                x._id === existUser._id ? { ...x, unread: false } : x\n            );\n            setUsers(allUsers);\n        }\n        socket.emit('onUserSelected', user);\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (!messageBody.trim()) {\n            alert('Error. Please type message.');\n        } else {\n            allMessages = [\n                ...allMessages,\n                { body: messageBody, name: userInfo.name },\n            ];\n            setMessages(allMessages);\n            setMessageBody('');\n            setTimeout(() => {\n                socket.emit('onMessage', {\n                    body: messageBody,\n                    name: userInfo.name,\n                    isAdmin: userInfo.isAdmin,\n                    _id: selectedUser._id,\n                });\n            }, 1000);\n        }\n    };\n\n    return (\n        <div className=\"row top full-container\">\n            <div className=\"col-1 support-users\">\n                {users.filter((x) => x._id !== userInfo._id).length === 0 && (\n                    <MessageBox>No Online User Found</MessageBox>\n                )}\n                <ul>\n                    {users\n                        .filter((x) => x._id !== userInfo._id)\n                        .map((user) => (\n                            <li\n                                key={user._id}\n                                className={user._id === selectedUser._id ? '  selected' : '  '}\n                            >\n                                <button\n                                    className=\"block\"\n                                    type=\"button\"\n                                    onClick={() => selectUser(user)}\n                                >\n                                    {user.name}\n                                </button>\n                                <span\n                                    className={\n                                        user.unread ? 'unread' : user.online ? 'online' : 'offline'\n                                    }\n                                />\n                            </li>\n                        ))}\n                </ul>\n            </div>\n            <div className=\"col-3 support-messages\">\n                {!selectedUser._id ? (\n                    <MessageBox>Select a user to start chat</MessageBox>\n                ) : (\n                        <div>\n                            <div className=\"row\">\n                                <strong>Chat with {selectedUser.name} </strong>\n                            </div>\n                            <ul ref={uiMessagesRef}>\n                                {messages.length === 0 && <li>No message.</li>}\n                                {messages.map((msg, index) => (\n                                    <li key={index}>\n                                        <strong>{`${msg.name}: `}</strong> {msg.body}\n                                    </li>\n                                ))}\n                            </ul>\n                            <div>\n                                <form onSubmit={submitHandler} className=\"row\">\n                                    <input\n                                        value={messageBody}\n                                        onChange={(e) => setMessageBody(e.target.value)}\n                                        type=\"text\"\n                                        placeholder=\"type message\"\n                                    />\n                                    <button type=\"submit\">Send</button>\n                                </form>\n                            </div>\n                        </div>\n                    )}\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}