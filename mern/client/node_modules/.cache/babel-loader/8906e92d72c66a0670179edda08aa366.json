{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dwaynehovington/Desktop/Mern/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dwaynehovington/Desktop/Mern/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/dwaynehovington/Desktop/Mern/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import{LoadScript,GoogleMap,StandaloneSearchBox,Marker}from'@react-google-maps/api';import LoadingBox from'../components/LoadingBox';import Axios from'axios';import{USER_ADDRESS_MAP_CONFIRM}from'../constants/userConstants';import{useDispatch}from'react-redux';var libs=['places'];var defaultLocation={lat:45.516,lng:-73.56};function MapScreen(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),googleApiKey=_useState2[0],setGoogleApiKey=_useState2[1];var _useState3=useState(defaultLocation),_useState4=_slicedToArray(_useState3,2),center=_useState4[0],setCenter=_useState4[1];var _useState5=useState(center),_useState6=_slicedToArray(_useState5,2),location=_useState6[0],setLocation=_useState6[1];var mapRef=useRef(null);var placeRef=useRef(null);var markerRef=useRef(null);useEffect(function(){var fetch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Axios,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios('/api/config/google');case 2:_yield$Axios=_context.sent;data=_yield$Axios.data;setGoogleApiKey(data);getUserCurrentLocation();case 6:case\"end\":return _context.stop();}}},_callee);}));return function fetch(){return _ref.apply(this,arguments);};}();fetch();},[]);var onLoad=function onLoad(map){mapRef.current=map;};var onMarkerLoad=function onMarkerLoad(marker){markerRef.current=marker;};var onLoadPlaces=function onLoadPlaces(place){placeRef.current=place;};var onIdle=function onIdle(){setLocation({lat:mapRef.current.center.lat(),lng:mapRef.current.center.lng()});};var onPlacesChanged=function onPlacesChanged(){var place=placeRef.current.getPlaces()[0].geometry.location;setCenter({lat:place.lat(),lng:place.lng()});setLocation({lat:place.lat(),lng:place.lng()});};var dispatch=useDispatch();var onConfirm=function onConfirm(){var places=placeRef.current.getPlaces();if(places&&places.length===1){// dispatch select action\ndispatch({type:USER_ADDRESS_MAP_CONFIRM,payload:{lat:location.lat,lng:location.lng,address:places[0].formatted_address,name:places[0].name,vicinity:places[0].vicinity,googleAddressId:places[0].id}});alert('location selected successfully.');props.history.push('/shipping');}else{alert('Please enter your address');}};var getUserCurrentLocation=function getUserCurrentLocation(){if(!navigator.geolocation){alert('Geolocation os not supported by this browser');}else{navigator.geolocation.getCurrentPosition(function(position){setCenter({lat:position.coords.latitude,lng:position.coords.longitude});setLocation({lat:position.coords.latitude,lng:position.coords.longitude});});}};return googleApiKey?/*#__PURE__*/React.createElement(\"div\",{className:\"full-container\"},/*#__PURE__*/React.createElement(LoadScript,{libraries:libs,googleMapsApiKey:googleApiKey},/*#__PURE__*/React.createElement(GoogleMap,{id:\"sample-map\",mapContainerStyle:{height:'100%',width:'100%'},center:center,zoom:15,onLoad:onLoad,onIdle:onIdle},/*#__PURE__*/React.createElement(StandaloneSearchBox,{onLoad:onLoadPlaces,onPlacesChanged:onPlacesChanged},/*#__PURE__*/React.createElement(\"div\",{className:\"map-input-box\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Enter your address\"}),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"primary\",onClick:onConfirm},\"Confirm\"))),/*#__PURE__*/React.createElement(Marker,{position:location,onLoad:onMarkerLoad})))):/*#__PURE__*/React.createElement(LoadingBox,null);}export default MapScreen;","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/Mern/mern/client/src/screens/MapScreen.js"],"names":["React","useEffect","useRef","useState","LoadScript","GoogleMap","StandaloneSearchBox","Marker","LoadingBox","Axios","USER_ADDRESS_MAP_CONFIRM","useDispatch","libs","defaultLocation","lat","lng","MapScreen","props","googleApiKey","setGoogleApiKey","center","setCenter","location","setLocation","mapRef","placeRef","markerRef","fetch","data","getUserCurrentLocation","onLoad","map","current","onMarkerLoad","marker","onLoadPlaces","place","onIdle","onPlacesChanged","getPlaces","geometry","dispatch","onConfirm","places","length","type","payload","address","formatted_address","name","vicinity","googleAddressId","id","alert","history","push","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n    LoadScript,\n    GoogleMap,\n    StandaloneSearchBox,\n    Marker,\n} from '@react-google-maps/api';\nimport LoadingBox from '../components/LoadingBox';\nimport Axios from 'axios';\nimport { USER_ADDRESS_MAP_CONFIRM } from '../constants/userConstants';\nimport { useDispatch } from 'react-redux';\n\nconst libs = ['places'];\nconst defaultLocation = { lat: 45.516, lng: -73.56 };\n\nfunction MapScreen(props) {\n    const [googleApiKey, setGoogleApiKey] = useState('');\n    const [center, setCenter] = useState(defaultLocation);\n    const [location, setLocation] = useState(center);\n\n    const mapRef = useRef(null);\n    const placeRef = useRef(null);\n    const markerRef = useRef(null);\n\n    useEffect(() => {\n        const fetch = async () => {\n            const { data } = await Axios('/api/config/google');\n            setGoogleApiKey(data);\n            getUserCurrentLocation();\n        };\n        fetch();\n    }, []);\n\n    const onLoad = (map) => {\n        mapRef.current = map;\n    };\n\n    const onMarkerLoad = (marker) => {\n        markerRef.current = marker;\n    };\n    const onLoadPlaces = (place) => {\n        placeRef.current = place;\n    };\n    const onIdle = () => {\n        setLocation({\n            lat: mapRef.current.center.lat(),\n            lng: mapRef.current.center.lng(),\n        });\n    };\n    const onPlacesChanged = () => {\n        const place = placeRef.current.getPlaces()[0].geometry.location;\n        setCenter({ lat: place.lat(), lng: place.lng() });\n        setLocation({ lat: place.lat(), lng: place.lng() });\n    };\n    const dispatch = useDispatch();\n    const onConfirm = () => {\n        const places = placeRef.current.getPlaces();\n        if (places && places.length === 1) {\n            // dispatch select action\n            dispatch({\n                type: USER_ADDRESS_MAP_CONFIRM,\n                payload: {\n                    lat: location.lat,\n                    lng: location.lng,\n                    address: places[0].formatted_address,\n                    name: places[0].name,\n                    vicinity: places[0].vicinity,\n                    googleAddressId: places[0].id,\n                },\n            });\n            alert('location selected successfully.');\n            props.history.push('/shipping');\n        } else {\n            alert('Please enter your address');\n        }\n    };\n\n    const getUserCurrentLocation = () => {\n        if (!navigator.geolocation) {\n            alert('Geolocation os not supported by this browser');\n        } else {\n            navigator.geolocation.getCurrentPosition((position) => {\n                setCenter({\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude,\n                });\n                setLocation({\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude,\n                });\n            });\n        }\n    };\n\n    return googleApiKey ? (\n        <div className=\"full-container\">\n            <LoadScript libraries={libs} googleMapsApiKey={googleApiKey}>\n                <GoogleMap\n                    id=\"sample-map\"\n                    mapContainerStyle={{ height: '100%', width: '100%' }}\n                    center={center}\n                    zoom={15}\n                    onLoad={onLoad}\n                    onIdle={onIdle}\n                >\n                    <StandaloneSearchBox\n                        onLoad={onLoadPlaces}\n                        onPlacesChanged={onPlacesChanged}\n                    >\n                        <div className=\"map-input-box\">\n                            <input type=\"text\" placeholder=\"Enter your address\"></input>\n                            <button type=\"button\" className=\"primary\" onClick={onConfirm}>\n                                Confirm\n              </button>\n                        </div>\n                    </StandaloneSearchBox>\n                    <Marker position={location} onLoad={onMarkerLoad}></Marker>\n                </GoogleMap>\n            </LoadScript>\n        </div>\n    ) : (\n            <LoadingBox></LoadingBox>\n        );\n}\n\nexport default MapScreen"]},"metadata":{},"sourceType":"module"}