{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_SUCCESS, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_SUCCESS, USER_DELETE_REQUEST, USER_DELETE_FAIL, USER_TOPSELLERS_LIST_REQUEST, USER_TOPSELLERS_LIST_SUCCESS, USER_TOPSELLERS_LIST_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\";\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/users/profile`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  dispatch({\n    type: USER_LIST_REQUEST\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get('/api/users', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DELETE_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.delete(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/users/${user._id}`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listTopSellers = () => async dispatch => {\n  dispatch({\n    type: USER_TOPSELLERS_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/users/top-sellers');\n    dispatch({\n      type: USER_TOPSELLERS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_TOPSELLERS_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/Mern/mern/client/src/actions/userActions.js"],"names":["Axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_SUCCESS","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DELETE_SUCCESS","USER_DELETE_REQUEST","USER_DELETE_FAIL","USER_TOPSELLERS_LIST_REQUEST","USER_TOPSELLERS_LIST_SUCCESS","USER_TOPSELLERS_LIST_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","register","name","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id","listTopSellers"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_SUCCESS, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_SUCCESS, USER_DELETE_REQUEST, USER_DELETE_FAIL, USER_TOPSELLERS_LIST_REQUEST, USER_TOPSELLERS_LIST_SUCCESS, USER_TOPSELLERS_LIST_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\"\n\nexport const register = (name, email, password) => async (dispatch) => {\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n    try {\n        const { data } = await Axios.post('/api/users/register', { name, email, password });\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\nexport const signin = (email, password) => async (dispatch) => {\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n    try {\n        const { data } = await Axios.post('/api/users/signin', { email, password });\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_SIGNIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const signout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('shippingAddress');\n    dispatch({ type: USER_SIGNOUT })\n}\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n    const { userSignin: { userInfo } } = getState();\n    try {\n        const { data } = await Axios.get(`/api/users/${userId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n\n        });\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({ type: USER_DETAILS_FAIL, payload: message })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n    const { userSignin: { userInfo }, } = getState();\n    try {\n        const { data } = await Axios.put(`/api/users/profile`, user, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        const message = error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    dispatch({ type: USER_LIST_REQUEST });\n    try {\n        const {\n            userSignin: { userInfo },\n        } = getState();\n        const { data } = await Axios.get('/api/users', {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        });\n        dispatch({ type: USER_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: USER_LIST_FAIL, payload: message });\n    }\n};\n\nexport const deleteUser = (userId) => async (dispatch, getState) => {\n    dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.delete(`/api/users/${userId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: USER_DELETE_FAIL, payload: message });\n    }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.put(`/api/users/${user._id}`, user, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: USER_UPDATE_FAIL, payload: message });\n    }\n};\n\nexport const listTopSellers = () => async (dispatch) => {\n    dispatch({ type: USER_TOPSELLERS_LIST_REQUEST });\n    try {\n        const { data } = await Axios.get('/api/users/top-sellers');\n        dispatch({ type: USER_TOPSELLERS_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: USER_TOPSELLERS_LIST_FAIL, payload: message });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}